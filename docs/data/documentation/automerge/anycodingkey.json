{
  "abstract" : [
    {
      "text" : "A type that maps provides a coding key value with an enumeration.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:9Automerge12AnyCodingKeyV",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "struct"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "AnyCodingKey"
      }
    ],
    "modules" : [
      {
        "name" : "Automerge"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "AnyCodingKey"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Structure",
    "symbolKind" : "struct",
    "title" : "AnyCodingKey"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "struct"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "AnyCodingKey"
            }
          ]
        }
      ],
      "kind" : "declarations"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/com.github.automerge.automerge-swift\/s9CodingKeyP",
        "doc:\/\/com.github.automerge.automerge-swift\/s28CustomDebugStringConvertibleP",
        "doc:\/\/com.github.automerge.automerge-swift\/s23CustomStringConvertibleP",
        "doc:\/\/com.github.automerge.automerge-swift\/SQ",
        "doc:\/\/com.github.automerge.automerge-swift\/SH",
        "doc:\/\/com.github.automerge.automerge-swift\/s8SendableP"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeEncoder",
        "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeDecoder",
        "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Counter",
        "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Text",
        "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/SchemaStrategy",
        "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CodingKeyLookupError",
        "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PathParseError"
      ],
      "title" : "Reading and Writing Codable Types"
    }
  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey\/init(_:)-5azuh",
        "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey\/init(_:)-6faed",
        "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey\/init(_:)-lfcr"
      ],
      "title" : "Initializers"
    },
    {
      "identifiers" : [
        "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey\/ROOT"
      ],
      "title" : "Type Properties"
    },
    {
      "identifiers" : [
        "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey\/parsePath(_:)"
      ],
      "title" : "Type Methods"
    },
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey\/CodingKey-Implementations",
        "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey\/CustomStringConvertible-Implementations",
        "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey\/Equatable-Implementations",
        "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey\/Hashable-Implementations"
      ],
      "title" : "Default Implementations"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/automerge\/anycodingkey"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://com.github.automerge.automerge-swift/SH": {
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/SH",
  "title" : "Swift.Hashable",
  "type" : "unresolvable"
},
"doc://com.github.automerge.automerge-swift/SQ": {
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/SQ",
  "title" : "Swift.Equatable",
  "type" : "unresolvable"
},
"doc://com.github.automerge.automerge-swift/documentation/Automerge": {
  "abstract" : [
    {
      "text" : "A library which provides fast implementations of several different CRDTs, a compact compression format for these CRDTs, and a sync protocol for efficiently transmitting those changes over the network.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Automerge",
  "type" : "topic",
  "url" : "\/documentation\/automerge"
},
"doc://com.github.automerge.automerge-swift/documentation/Automerge/AnyCodingKey": {
  "abstract" : [
    {
      "text" : "A type that maps provides a coding key value with an enumeration.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AnyCodingKey"
    }
  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AnyCodingKey"
    }
  ],
  "role" : "symbol",
  "title" : "AnyCodingKey",
  "type" : "topic",
  "url" : "\/documentation\/automerge\/anycodingkey"
},
"doc://com.github.automerge.automerge-swift/documentation/Automerge/AnyCodingKey/CodingKey-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey\/CodingKey-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "CodingKey Implementations",
  "type" : "topic",
  "url" : "\/documentation\/automerge\/anycodingkey\/codingkey-implementations"
},
"doc://com.github.automerge.automerge-swift/documentation/Automerge/AnyCodingKey/CustomStringConvertible-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey\/CustomStringConvertible-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "CustomStringConvertible Implementations",
  "type" : "topic",
  "url" : "\/documentation\/automerge\/anycodingkey\/customstringconvertible-implementations"
},
"doc://com.github.automerge.automerge-swift/documentation/Automerge/AnyCodingKey/Equatable-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey\/Equatable-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Equatable Implementations",
  "type" : "topic",
  "url" : "\/documentation\/automerge\/anycodingkey\/equatable-implementations"
},
"doc://com.github.automerge.automerge-swift/documentation/Automerge/AnyCodingKey/Hashable-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey\/Hashable-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Hashable Implementations",
  "type" : "topic",
  "url" : "\/documentation\/automerge\/anycodingkey\/hashable-implementations"
},
"doc://com.github.automerge.automerge-swift/documentation/Automerge/AnyCodingKey/ROOT": {
  "abstract" : [
    {
      "text" : "A coding key that represents the root of a schema hierarchy.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ROOT"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:9Automerge12AnyCodingKeyV",
      "text" : "AnyCodingKey"
    }
  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey\/ROOT",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "ROOT",
  "type" : "topic",
  "url" : "\/documentation\/automerge\/anycodingkey\/root"
},
"doc://com.github.automerge.automerge-swift/documentation/Automerge/AnyCodingKey/init(_:)-5azuh": {
  "abstract" : [
    {
      "text" : "Creates a new schema path element for a keyed container using the string you provide.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey\/init(_:)-5azuh",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(_:)",
  "type" : "topic",
  "url" : "\/documentation\/automerge\/anycodingkey\/init(_:)-5azuh"
},
"doc://com.github.automerge.automerge-swift/documentation/Automerge/AnyCodingKey/init(_:)-6faed": {
  "abstract" : [
    {
      "text" : "Creates a new schema path element for an un-keyed container using the index you provide.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s6UInt64V",
      "text" : "UInt64"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey\/init(_:)-6faed",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(_:)",
  "type" : "topic",
  "url" : "\/documentation\/automerge\/anycodingkey\/init(_:)-6faed"
},
"doc://com.github.automerge.automerge-swift/documentation/Automerge/AnyCodingKey/init(_:)-lfcr": {
  "abstract" : [
    {
      "text" : "Creates a new schema path element from a generic coding key.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "keyword",
      "text" : "some"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s9CodingKeyP",
      "text" : "CodingKey"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey\/init(_:)-lfcr",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(_:)",
  "type" : "topic",
  "url" : "\/documentation\/automerge\/anycodingkey\/init(_:)-lfcr"
},
"doc://com.github.automerge.automerge-swift/documentation/Automerge/AnyCodingKey/parsePath(_:)": {
  "abstract" : [
    {
      "text" : "Parses a string into an array of generic coding path elements.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "parsePath"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:9Automerge12AnyCodingKeyV",
      "text" : "AnyCodingKey"
    },
    {
      "kind" : "text",
      "text" : "]"
    }
  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey\/parsePath(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "parsePath(_:)",
  "type" : "topic",
  "url" : "\/documentation\/automerge\/anycodingkey\/parsepath(_:)"
},
"doc://com.github.automerge.automerge-swift/documentation/Automerge/AutomergeDecoder": {
  "abstract" : [
    {
      "text" : "A decoder that initializes codable-conforming types from an Automerge document.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AutomergeDecoder"
    }
  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeDecoder",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AutomergeDecoder"
    }
  ],
  "role" : "symbol",
  "title" : "AutomergeDecoder",
  "type" : "topic",
  "url" : "\/documentation\/automerge\/automergedecoder"
},
"doc://com.github.automerge.automerge-swift/documentation/Automerge/AutomergeEncoder": {
  "abstract" : [
    {
      "text" : "An encoder that stores codable-conforming types into an Automerge document.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AutomergeEncoder"
    }
  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeEncoder",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AutomergeEncoder"
    }
  ],
  "role" : "symbol",
  "title" : "AutomergeEncoder",
  "type" : "topic",
  "url" : "\/documentation\/automerge\/automergeencoder"
},
"doc://com.github.automerge.automerge-swift/documentation/Automerge/CodingKeyLookupError": {
  "abstract" : [
    {
      "text" : "Automerge Encoding errors",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "CodingKeyLookupError"
    }
  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CodingKeyLookupError",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "CodingKeyLookupError"
    }
  ],
  "role" : "symbol",
  "title" : "CodingKeyLookupError",
  "type" : "topic",
  "url" : "\/documentation\/automerge\/codingkeylookuperror"
},
"doc://com.github.automerge.automerge-swift/documentation/Automerge/Counter": {
  "abstract" : [
    {
      "text" : "A type that represents the value of an Automerge counter.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Counter"
    }
  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Counter",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Counter"
    }
  ],
  "role" : "symbol",
  "title" : "Counter",
  "type" : "topic",
  "url" : "\/documentation\/automerge\/counter"
},
"doc://com.github.automerge.automerge-swift/documentation/Automerge/PathParseError": {
  "abstract" : [
    {
      "text" : "Path Parsing Errors",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "PathParseError"
    }
  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PathParseError",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "PathParseError"
    }
  ],
  "role" : "symbol",
  "title" : "PathParseError",
  "type" : "topic",
  "url" : "\/documentation\/automerge\/pathparseerror"
},
"doc://com.github.automerge.automerge-swift/documentation/Automerge/SchemaStrategy": {
  "abstract" : [
    {
      "text" : "A type that represents the encoder strategy to establish or error on differences in existing Automerge documents",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "as compared to expected encoding.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "SchemaStrategy"
    }
  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/SchemaStrategy",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "SchemaStrategy"
    }
  ],
  "role" : "symbol",
  "title" : "SchemaStrategy",
  "type" : "topic",
  "url" : "\/documentation\/automerge\/schemastrategy"
},
"doc://com.github.automerge.automerge-swift/documentation/Automerge/Text": {
  "abstract" : [
    {
      "text" : "A type that presents a string backed by a Sequential CRDT",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Text"
    }
  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Text",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Text"
    }
  ],
  "role" : "symbol",
  "title" : "Text",
  "type" : "topic",
  "url" : "\/documentation\/automerge\/text"
},
"doc://com.github.automerge.automerge-swift/s23CustomStringConvertibleP": {
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/s23CustomStringConvertibleP",
  "title" : "Swift.CustomStringConvertible",
  "type" : "unresolvable"
},
"doc://com.github.automerge.automerge-swift/s28CustomDebugStringConvertibleP": {
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/s28CustomDebugStringConvertibleP",
  "title" : "Swift.CustomDebugStringConvertible",
  "type" : "unresolvable"
},
"doc://com.github.automerge.automerge-swift/s8SendableP": {
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/s8SendableP",
  "title" : "Swift.Sendable",
  "type" : "unresolvable"
},
"doc://com.github.automerge.automerge-swift/s9CodingKeyP": {
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/s9CodingKeyP",
  "title" : "Swift.CodingKey",
  "type" : "unresolvable"
}
}
}