{
  "abstract" : [
    {
      "text" : "A synchronisation session with another peer",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/SyncState"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:9Automerge9SyncStateV",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "struct"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "SyncState"
      }
    ],
    "modules" : [
      {
        "name" : "Automerge"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "SyncState"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Structure",
    "symbolKind" : "struct",
    "title" : "SyncState"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "struct"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "SyncState"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "The sync protocol is designed to run over a reliable in-order transport with",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "the ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/SyncState",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " tracking the state between successive calls to",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/generateSyncMessage(state:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " and",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/receiveSyncMessage(state:message:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ". Assuming the existence of some",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "network infrastructure for sending and receiving messages on the transport a",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "loop to stay in sync might look like the following",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "\/\/ somehow obtain the document, or create a new one if you have no data",
            "let doc: Document = ...",
            "let state = SyncState()",
            "repeat {",
            "   if let msg = doc.generateSyncMessage(state) {",
            "       await network.send(msg)",
            "   }",
            "   let response = await network.receive() {",
            "       try! doc.receiveSyncMessage(state, response)",
            "   }",
            "}"
          ],
          "syntax" : null,
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "Sync states can be persisted. If you know a peer might connect to you again",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "you can use ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/SyncState\/encode()",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " to save the state and ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/SyncState\/init(bytes:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " to decode it.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/com.github.automerge.automerge-swift\/s8SendableP"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ActorId",
        "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ChangeHash",
        "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/DeleteSeq",
        "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Patch",
        "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PatchAction",
        "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PathElement",
        "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Prop"
      ],
      "title" : "Replicating Documents"
    }
  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/SyncState\/init()",
        "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/SyncState\/init(bytes:)"
      ],
      "title" : "Initializers"
    },
    {
      "identifiers" : [
        "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/SyncState\/theirHeads"
      ],
      "title" : "Instance Properties"
    },
    {
      "identifiers" : [
        "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/SyncState\/encode()",
        "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/SyncState\/reset()"
      ],
      "title" : "Instance Methods"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/automerge\/syncstate"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://com.github.automerge.automerge-swift/documentation/Automerge": {
  "abstract" : [
    {
      "text" : "A library which provides fast implementations of several different CRDTs, a compact compression format for these CRDTs, and a sync protocol for efficiently transmitting those changes over the network.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Automerge",
  "type" : "topic",
  "url" : "\/documentation\/automerge"
},
"doc://com.github.automerge.automerge-swift/documentation/Automerge/ActorId": {
  "abstract" : [
    {
      "text" : "The identifier for collaborators contributing to an Automerge document.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ActorId"
    }
  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ActorId",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ActorId"
    }
  ],
  "role" : "symbol",
  "title" : "ActorId",
  "type" : "topic",
  "url" : "\/documentation\/automerge\/actorid"
},
"doc://com.github.automerge.automerge-swift/documentation/Automerge/ChangeHash": {
  "abstract" : [
    {
      "text" : "An opaque hash that represents a change within an Automerge document.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChangeHash"
    }
  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ChangeHash",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChangeHash"
    }
  ],
  "role" : "symbol",
  "title" : "ChangeHash",
  "type" : "topic",
  "url" : "\/documentation\/automerge\/changehash"
},
"doc://com.github.automerge.automerge-swift/documentation/Automerge/DeleteSeq": {
  "abstract" : [
    {
      "text" : "A sequence of deletions.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "DeleteSeq"
    }
  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/DeleteSeq",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "DeleteSeq"
    }
  ],
  "role" : "symbol",
  "title" : "DeleteSeq",
  "type" : "topic",
  "url" : "\/documentation\/automerge\/deleteseq"
},
"doc://com.github.automerge.automerge-swift/documentation/Automerge/Document/generateSyncMessage(state:)": {
  "abstract" : [
    {
      "text" : "Generate a sync message to send to the peer represented by ",
      "type" : "text"
    },
    {
      "code" : "state",
      "type" : "codeVoice"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "generateSyncMessage"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "state"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:9Automerge9SyncStateV",
      "text" : "SyncState"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation4DataV",
      "text" : "Data"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/generateSyncMessage(state:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "generateSyncMessage(state:)",
  "type" : "topic",
  "url" : "\/documentation\/automerge\/document\/generatesyncmessage(state:)"
},
"doc://com.github.automerge.automerge-swift/documentation/Automerge/Document/receiveSyncMessage(state:message:)": {
  "abstract" : [
    {
      "text" : "Receive a sync message from the peer represented by ",
      "type" : "text"
    },
    {
      "code" : "state",
      "type" : "codeVoice"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "receiveSyncMessage"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "state"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:9Automerge9SyncStateV",
      "text" : "SyncState"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "message"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation4DataV",
      "text" : "Data"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    }
  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/receiveSyncMessage(state:message:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "receiveSyncMessage(state:message:)",
  "type" : "topic",
  "url" : "\/documentation\/automerge\/document\/receivesyncmessage(state:message:)"
},
"doc://com.github.automerge.automerge-swift/documentation/Automerge/Patch": {
  "abstract" : [
    {
      "text" : "A collection of updates applied to an Automerge document.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Patch"
    }
  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Patch",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Patch"
    }
  ],
  "role" : "symbol",
  "title" : "Patch",
  "type" : "topic",
  "url" : "\/documentation\/automerge\/patch"
},
"doc://com.github.automerge.automerge-swift/documentation/Automerge/PatchAction": {
  "abstract" : [
    {
      "text" : "The type of change the library applied to an Automerge document, along with the data that changed.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "PatchAction"
    }
  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PatchAction",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "PatchAction"
    }
  ],
  "role" : "symbol",
  "title" : "PatchAction",
  "type" : "topic",
  "url" : "\/documentation\/automerge\/patchaction"
},
"doc://com.github.automerge.automerge-swift/documentation/Automerge/PathElement": {
  "abstract" : [
    {
      "text" : "A component of the path to an object within a document.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "PathElement"
    }
  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PathElement",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "PathElement"
    }
  ],
  "role" : "symbol",
  "title" : "PathElement",
  "type" : "topic",
  "url" : "\/documentation\/automerge\/pathelement"
},
"doc://com.github.automerge.automerge-swift/documentation/Automerge/Prop": {
  "abstract" : [
    {
      "text" : "A type that represents a property on an object within an Automerge document.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Prop"
    }
  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Prop",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Prop"
    }
  ],
  "role" : "symbol",
  "title" : "Prop",
  "type" : "topic",
  "url" : "\/documentation\/automerge\/prop"
},
"doc://com.github.automerge.automerge-swift/documentation/Automerge/SyncState": {
  "abstract" : [
    {
      "text" : "A synchronisation session with another peer",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "SyncState"
    }
  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/SyncState",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "SyncState"
    }
  ],
  "role" : "symbol",
  "title" : "SyncState",
  "type" : "topic",
  "url" : "\/documentation\/automerge\/syncstate"
},
"doc://com.github.automerge.automerge-swift/documentation/Automerge/SyncState/encode()": {
  "abstract" : [
    {
      "text" : "Serialize this sync state",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "encode"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation4DataV",
      "text" : "Data"
    }
  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/SyncState\/encode()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "encode()",
  "type" : "topic",
  "url" : "\/documentation\/automerge\/syncstate\/encode()"
},
"doc://com.github.automerge.automerge-swift/documentation/Automerge/SyncState/init()": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "()"
    }
  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/SyncState\/init()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init()",
  "type" : "topic",
  "url" : "\/documentation\/automerge\/syncstate\/init()"
},
"doc://com.github.automerge.automerge-swift/documentation/Automerge/SyncState/init(bytes:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "bytes"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation4DataV",
      "text" : "Data"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    }
  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/SyncState\/init(bytes:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(bytes:)",
  "type" : "topic",
  "url" : "\/documentation\/automerge\/syncstate\/init(bytes:)"
},
"doc://com.github.automerge.automerge-swift/documentation/Automerge/SyncState/reset()": {
  "abstract" : [
    {
      "text" : "Reset the state if the connection is interrupted",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "reset"
    },
    {
      "kind" : "text",
      "text" : "()"
    }
  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/SyncState\/reset()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "reset()",
  "type" : "topic",
  "url" : "\/documentation\/automerge\/syncstate\/reset()"
},
"doc://com.github.automerge.automerge-swift/documentation/Automerge/SyncState/theirHeads": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "theirHeads"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sh",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:9Automerge10ChangeHashV",
      "text" : "ChangeHash"
    },
    {
      "kind" : "text",
      "text" : ">?"
    }
  ],
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/SyncState\/theirHeads",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "theirHeads",
  "type" : "topic",
  "url" : "\/documentation\/automerge\/syncstate\/theirheads"
},
"doc://com.github.automerge.automerge-swift/s8SendableP": {
  "identifier" : "doc:\/\/com.github.automerge.automerge-swift\/s8SendableP",
  "title" : "Swift.Sendable",
  "type" : "unresolvable"
}
}
}