[
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Patch\/path"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "path"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Value"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "Value"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypePatchAction\/write(_:into:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.write(_:into:). ",
    "summary" : "Inherited from FfiConverter.write(_:into:).",
    "title" : "write(_:into:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/PatchAction\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeKeyValue"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeKeyValue"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/getAllAtInList(obj:index:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.getAllAtInList(obj:index:heads:). ",
    "summary" : "Inherited from DocProtocol.getAllAtInList(obj:index:heads:).",
    "title" : "getAllAtInList(obj:index:heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeDecoder\/codingPath"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "codingPath"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ActorId\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Value\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CodingKeyLookupError\/UnexpectedLookupFailure(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An error that represents a coding container was unable to look up a relevant Automerge objectId and was unable to capture a more specific error. ",
    "summary" : "An error that represents a coding container was unable to look up a relevant Automerge objectId and was unable to capture a more specific error.",
    "title" : "CodingKeyLookupError.UnexpectedLookupFailure(_:)"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/SchemaStrategy\/override"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Creates schema, irregardless of existing schema.  Discussion Disregards any existing schema that currently exists in the Automerge document and overwrites the path elements as the encoding progresses. This option will potentially change the schema within an Automerge document.",
    "summary" : "Creates schema, irregardless of existing schema.",
    "title" : "SchemaStrategy.override"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeScalarValue"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeScalarValue"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/deleteInList(obj:index:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.deleteInList(obj:index:). ",
    "summary" : "Inherited from DocProtocol.deleteInList(obj:index:).",
    "title" : "deleteInList(obj:index:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypePathElement_lift(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypePathElement_lift(_:)"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/forkAt(heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Fork the document as at heads  Discussion Fork the document but such that it only contains changes up to heads",
    "summary" : "Fork the document as at heads",
    "title" : "forkAt(heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PatchAction"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The type of change the library applied to an Automerge document, along with the data that changed. ",
    "summary" : "The type of change the library applied to an Automerge document, along with the data that changed.",
    "title" : "PatchAction"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ScalarValue\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/fork()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "fork()"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CodingKeyLookupError\/EmptyListIndex(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The path element, structured as a Index location, doesn’t include an index value. ",
    "summary" : "The path element, structured as a Index location, doesn’t include an index value.",
    "title" : "CodingKeyLookupError.EmptyListIndex(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey\/CustomStringConvertible-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "CustomStringConvertible Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeValue_lift(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeValue_lift(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ObjId\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/put(obj:key:value:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Set or update the  value at key in the map obj to value ",
    "summary" : "Set or update the  value at key in the map obj to value",
    "title" : "put(obj:key:value:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey\/hash(into:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Hashable.hash(into:). ",
    "summary" : "Inherited from Hashable.hash(into:).",
    "title" : "hash(into:)"
  },
  {
    "headings" : [
      "Overview"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ActorId"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The identifier for collaborators contributing to an Automerge document.  Overview Each separate instance of an Automerge document should have it’s own, unique, ActorId. If you create your own ActorId, no concurrent changes should ever be made with the same ActorId.",
    "summary" : "The identifier for collaborators contributing to an Automerge document.",
    "title" : "ActorId"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/applyEncodedChanges(changes:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.applyEncodedChanges(changes:). ",
    "summary" : "Inherited from DocProtocol.applyEncodedChanges(changes:).",
    "title" : "applyEncodedChanges(changes:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypePathElement\/write(_:into:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.write(_:into:). ",
    "summary" : "Inherited from FfiConverter.write(_:into:).",
    "title" : "write(_:into:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/textAt(obj:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.textAt(obj:heads:). ",
    "summary" : "Inherited from DocProtocol.textAt(obj:heads:).",
    "title" : "textAt(obj:heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeEncoder\/encode(_:)-7gbuh"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "encode(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CodingKeyLookupError\/InvalidIndexLookup(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The path provided to look up an index is invalid. ",
    "summary" : "The path provided to look up an index is invalid.",
    "title" : "CodingKeyLookupError.InvalidIndexLookup(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/BooleanScalarConversionError\/notboolScalarValue(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "BooleanScalarConversionError.notboolScalarValue(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/StringScalarConversionError\/errorDescription"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A localized message describing what error occurred. ",
    "summary" : "A localized message describing what error occurred.",
    "title" : "errorDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ReceiveSyncError\/localizedDescription"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from Error.localizedDescription. ",
    "summary" : "Inherited from Error.localizedDescription.",
    "title" : "localizedDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeObjType"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeObjType"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeEncoder\/encode(_:at:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "encode(_:at:)"
  },
  {
    "headings" : [
      "Overview"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ReceiveSyncError"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An error that indicates the received synchronisation could not be applied.  Overview The error is specific to the Rust language binding infrastructure.",
    "summary" : "An error that indicates the received synchronisation could not be applied.",
    "title" : "ReceiveSyncError"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey\/init(_:)-lfcr"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Creates a new schema path element from a generic coding key.  The coding key to use for internal values.",
    "summary" : "Creates a new schema path element from a generic coding key.",
    "title" : "init(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ObjType\/CustomDebugStringConvertible-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "CustomDebugStringConvertible Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/SyncState\/init()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "init()"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeLoadError"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeLoadError"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/DecodeSyncStateError\/localizedDescription"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from Error.localizedDescription. ",
    "summary" : "Inherited from Error.localizedDescription.",
    "title" : "localizedDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/DeleteSeq\/index"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The index location of the start of the deletion. ",
    "summary" : "The index location of the start of the deletion.",
    "title" : "index"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ChangeHash"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An opaque hash that represents a change within an Automerge document. ",
    "summary" : "An opaque hash that represents a change within an Automerge document.",
    "title" : "ChangeHash"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ScalarValue\/bytes(value:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "ScalarValue.bytes(value:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/encodeNewChanges()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "encodeNewChanges()"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ScalarValue\/counter(value:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "ScalarValue.counter(value:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeObjType\/write(_:into:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.write(_:into:). ",
    "summary" : "Inherited from FfiConverter.write(_:into:).",
    "title" : "write(_:into:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypePatch_lower(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypePatch_lower(_:)"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/receiveSyncMessage(state:message:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Receive a sync message from the peer represented by state  Discussion if you need to know what changed in the document as a result of the message try using receiveSyncMessageWithPatches(state:message:)",
    "summary" : "Receive a sync message from the peer represented by state",
    "title" : "receiveSyncMessage(state:message:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CodingKeyLookupError\/MismatchedSchema(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The path provided doesn’t match the schema within the Automerge Document. ",
    "summary" : "The path provided doesn’t match the schema within the Automerge Document.",
    "title" : "CodingKeyLookupError.MismatchedSchema(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Value\/debugDescription"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from CustomDebugStringConvertible.debugDescription. ",
    "summary" : "Inherited from CustomDebugStringConvertible.debugDescription.",
    "title" : "debugDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Counter\/init(_:)-7fbpz"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "init(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/insert(obj:index:value:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Insert value into the sequence obj at index ",
    "summary" : "Insert value into the sequence obj at index",
    "title" : "insert(obj:index:value:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey\/Hashable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Hashable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/UIntScalarConversionError\/recoverySuggestion"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from LocalizedError.recoverySuggestion. ",
    "summary" : "Inherited from LocalizedError.recoverySuggestion.",
    "title" : "recoverySuggestion"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/UIntScalarConversionError\/Error-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Error Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/save()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.save(). ",
    "summary" : "Inherited from DocProtocol.save().",
    "title" : "save()"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ScalarValue\/Timestamp(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A timestamp represented by the milliseconds since UNIX epoch (Jan 1st, 1970, 00:00 UTC). ",
    "summary" : "A timestamp represented by the milliseconds since UNIX epoch (Jan 1st, 1970, 00:00 UTC).",
    "title" : "ScalarValue.Timestamp(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CodingKeyLookupError\/SchemaMissing(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The path provided expected schema within the Automerge document that doesn’t exist. ",
    "summary" : "The path provided expected schema within the Automerge document that doesn’t exist.",
    "title" : "CodingKeyLookupError.SchemaMissing(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/FloatingPointScalarConversionError\/helpAnchor"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from LocalizedError.helpAnchor. ",
    "summary" : "Inherited from LocalizedError.helpAnchor.",
    "title" : "helpAnchor"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey\/ROOT"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A coding key that represents the root of a schema hierarchy.  Discussion ROOT conceptually maps to the equivalent of an empty array of some CodingKey.",
    "summary" : "A coding key that represents the root of a schema hierarchy.",
    "title" : "ROOT"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/TimestampScalarConversionError\/helpAnchor"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from LocalizedError.helpAnchor. ",
    "summary" : "Inherited from LocalizedError.helpAnchor.",
    "title" : "helpAnchor"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/valuesAt(obj:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.valuesAt(obj:heads:). ",
    "summary" : "Inherited from DocProtocol.valuesAt(obj:heads:).",
    "title" : "valuesAt(obj:heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PatchAction\/DeleteSeq(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Delete a sequence from the identified object starting at the index you provide for the length you provide. ",
    "summary" : "Delete a sequence from the identified object starting at the index you provide for the length you provide.",
    "title" : "PatchAction.DeleteSeq(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Value\/scalar(value:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "Value.scalar(value:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocError\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey\/stringValue"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The string value for this schema path element. ",
    "summary" : "The string value for this schema path element.",
    "title" : "stringValue"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CodingKeyLookupError\/failureReason"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A localized message describing the reason for the failure. ",
    "summary" : "A localized message describing the reason for the failure.",
    "title" : "failureReason"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CodingKeyLookupError\/IndexOutOfBounds(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The list index requested was longer than the list in the Document. ",
    "summary" : "The list index requested was longer than the list in the Document.",
    "title" : "CodingKeyLookupError.IndexOutOfBounds(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/TimestampScalarConversionError\/notTimetampValue(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "TimestampScalarConversionError.notTimetampValue(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ScalarValue\/int(value:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "ScalarValue.int(value:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PathParseError"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Path Parsing Errors ",
    "summary" : "Path Parsing Errors",
    "title" : "PathParseError"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/BytesScalarConversionError\/localizedDescription"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from Error.localizedDescription. ",
    "summary" : "Inherited from Error.localizedDescription.",
    "title" : "localizedDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeObjId"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeObjId"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CounterScalarConversionError\/Error-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Error Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeScalarValue\/write(_:into:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.write(_:into:). ",
    "summary" : "Inherited from FfiConverter.write(_:into:).",
    "title" : "write(_:into:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Value"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A type that represents a value or object managed by Automerge. ",
    "summary" : "A type that represents a value or object managed by Automerge.",
    "title" : "Value"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ActorId"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Typealias from the type name used in the UDL file to the builtin type.  This is needed because the UDL type name is used in function\/method signatures. ",
    "summary" : "Typealias from the type name used in the UDL file to the builtin type.  This is needed because the UDL type name is used in function\/method signatures.",
    "title" : "ActorId"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/objectType(obj:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns the object type for the object Id that you provide.  The object Id to inspect.",
    "summary" : "Returns the object type for the object Id that you provide.",
    "title" : "objectType(obj:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/putObjectInMap(obj:key:objType:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.putObjectInMap(obj:key:objType:). ",
    "summary" : "Inherited from DocProtocol.putObjectInMap(obj:key:objType:).",
    "title" : "putObjectInMap(obj:key:objType:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/getAllAtInList(obj:index:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "getAllAtInList(obj:index:heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeActorId\/lift(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.lift(_:). ",
    "summary" : "Inherited from FfiConverter.lift(_:).",
    "title" : "lift(_:)"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/fork()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Fork the document  Discussion Returns: A copy of the document with a new actor ID, ready for concurrent use",
    "summary" : "Fork the document",
    "title" : "fork()"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Prop"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "Prop"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/PathElement\/==(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.==(_:_:). ",
    "summary" : "Inherited from Equatable.==(_:_:).",
    "title" : "==(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/PatchAction\/deleteMap(obj:key:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "PatchAction.deleteMap(obj:key:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/fork()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.fork(). ",
    "summary" : "Inherited from DocProtocol.fork().",
    "title" : "fork()"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/mergeWithPatches(other:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.mergeWithPatches(other:). ",
    "summary" : "Inherited from DocProtocol.mergeWithPatches(other:).",
    "title" : "mergeWithPatches(other:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypePatch\/read(from:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.read(from:). ",
    "summary" : "Inherited from FfiConverter.read(from:).",
    "title" : "read(from:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/IntScalarConversionError\/notIntValue(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "IntScalarConversionError.notIntValue(_:)"
  },
  {
    "headings" : [
      "Indexes"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/spliceText(obj:start:delete:value:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Splice into the list obj  The list to insert into the index to begin inserting at IN UNICODE CODE POINTS the number of elements to delete IN UNICODE CODE POINTS the characters to insert Indexes Swift string indexes represent grapheme clusters, but automerge works in terms of UTF-8 code points. The indices to this method are utf-8 code point indices. This means if you receive indices from other parts of the application which are swift string indices you will need to convert them.",
    "summary" : "Splice into the list obj",
    "title" : "spliceText(obj:start:delete:value:)"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey\/parsePath(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Parses a string into an array of generic coding path elements.  The string to parse. Return Value An array of coding path elements corresponding to the string.",
    "summary" : "Parses a string into an array of generic coding path elements.",
    "title" : "parsePath(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DecodeSyncStateError\/Internal(message:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "DecodeSyncStateError.Internal(message:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/mapEntries(obj:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "mapEntries(obj:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ScalarValue\/Null"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A null. ",
    "summary" : "A null.",
    "title" : "ScalarValue.Null"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A type that maps provides a coding key value with an enumeration. ",
    "summary" : "A type that maps provides a coding key value with an enumeration.",
    "title" : "AnyCodingKey"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/DeleteSeq\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeDecodeSyncStateError\/read(from:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.read(from:). ",
    "summary" : "Inherited from FfiConverter.read(from:).",
    "title" : "read(from:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ObjId\/debugDescription"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from CustomDebugStringConvertible.debugDescription. ",
    "summary" : "Inherited from CustomDebugStringConvertible.debugDescription.",
    "title" : "debugDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/incrementInList(obj:index:by:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "incrementInList(obj:index:by:)"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Counter\/fromScalarValue(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Converts the Automerge representation to a local type, or returns a failure.  The Automerge ScalarValue to be converted into a local type. Return Value The local type, or an error indicating the reason for the failure to convert.",
    "summary" : "Converts the Automerge representation to a local type, or returns a failure.",
    "title" : "fromScalarValue(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/TimestampScalarConversionError\/Error-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Error Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/insertObjectInList(obj:index:objType:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.insertObjectInList(obj:index:objType:). ",
    "summary" : "Inherited from DocProtocol.insertObjectInList(obj:index:objType:).",
    "title" : "insertObjectInList(obj:index:objType:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeLoadError\/write(_:into:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.write(_:into:). ",
    "summary" : "Inherited from FfiConverter.write(_:into:).",
    "title" : "write(_:into:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/FloatingPointScalarConversionError\/LocalizedError-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "LocalizedError Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/length(obj:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.length(obj:). ",
    "summary" : "Inherited from DocProtocol.length(obj:).",
    "title" : "length(obj:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/values(obj:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "values(obj:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DecodeSyncStateError\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeScalarValue_lower(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeScalarValue_lower(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Value\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/receiveSyncMessage(state:msg:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "receiveSyncMessage(state:msg:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeDecoder\/init(doc:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "init(doc:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ScalarValue"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "ScalarValue"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocError\/Internal(message:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "DocError.Internal(message:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeDoc\/read(from:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.read(from:). ",
    "summary" : "Inherited from FfiConverter.read(from:).",
    "title" : "read(from:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/SyncState\/init(bytes:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "init(bytes:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocError\/localizedDescription"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from Error.localizedDescription. ",
    "summary" : "Inherited from Error.localizedDescription.",
    "title" : "localizedDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/LoadError"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "LoadError"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "DocProtocol"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PathElement\/prop"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "prop"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/actorId()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "actorId()"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeDocError"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeDocError"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ScalarValue"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A type that represents a primitive Automerge value. ",
    "summary" : "A type that represents a primitive Automerge value.",
    "title" : "ScalarValue"
  },
  {
    "headings" : [
      "Overview"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The entry point to automerge, a Document presents a key\/value interface to the data it contains; as well as methods for loading and saving documents, and taking part in the sync protocol.  Overview Typically there are four things you will want to do with a document: Read data using the various methods in the “Reading section” Inserting or modifying data using the methods in the “creating and modifying values” section Reading historical data - i.e. data which has since changed - using the the methods in the “Reading old values” section Interacting with concurrent documents (via the sync protocol or otherwise) using the methods in “Saving, syncing, forking, and merging”",
    "summary" : "The entry point to automerge, a Document presents a key\/value interface to the data it contains; as well as methods for loading and saving documents, and taking part in the sync protocol.",
    "title" : "Document"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Value\/Object(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An object type ",
    "summary" : "An object type",
    "title" : "Value.Object(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/receiveSyncMessageWithPatches(state:msg:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.receiveSyncMessageWithPatches(state:msg:). ",
    "summary" : "Inherited from DocProtocol.receiveSyncMessageWithPatches(state:msg:).",
    "title" : "receiveSyncMessageWithPatches(state:msg:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/FloatingPointScalarConversionError\/failureReason"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A localized message describing the reason for the failure. ",
    "summary" : "A localized message describing the reason for the failure.",
    "title" : "failureReason"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Prop\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/getAtInMap(obj:key:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.getAtInMap(obj:key:heads:). ",
    "summary" : "Inherited from DocProtocol.getAtInMap(obj:key:heads:).",
    "title" : "getAtInMap(obj:key:heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ObjType"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "ObjType"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/objectType(obj:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.objectType(obj:). ",
    "summary" : "Inherited from DocProtocol.objectType(obj:).",
    "title" : "objectType(obj:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ScalarValue\/String(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A string. ",
    "summary" : "A string.",
    "title" : "ScalarValue.String(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PatchAction\/Insert(_:_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Insert a collection of values at the index you provide for the identified object. ",
    "summary" : "Insert a collection of values at the index you provide for the identified object.",
    "title" : "PatchAction.Insert(_:_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Text\/CustomStringConvertible-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "CustomStringConvertible Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/IntScalarConversionError\/LocalizedError-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "LocalizedError Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PathParseError\/failureReason"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from LocalizedError.failureReason. ",
    "summary" : "Inherited from LocalizedError.failureReason.",
    "title" : "failureReason"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/mergeWithPatches(other:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Merge this document with other returning patches ",
    "summary" : "Merge this document with other returning patches",
    "title" : "mergeWithPatches(other:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/LoadError\/localizedDescription"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from Error.localizedDescription. ",
    "summary" : "Inherited from Error.localizedDescription.",
    "title" : "localizedDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/increment(obj:key:by:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Increment the counter at key in map obj by the amount by ",
    "summary" : "Increment the counter at key in map obj by the amount by",
    "title" : "increment(obj:key:by:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/receiveSyncMessageWithPatches(state:msg:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "receiveSyncMessageWithPatches(state:msg:)"
  },
  {
    "headings" : [
      "Return Value",
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ScalarValueRepresentable\/fromValue(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Converts the Automerge representation to a local type, or returns a failure.  The Automerge Value to be converted as a scalar value into a local type. Return Value The type, converted to a local type, or an error indicating the reason for the failure to convert. Discussion The protocol accepts defines a function to accept a Value primarily for convenience. Value is a higher level enumeration that also includes object types such as ObjType.List, ObjType.Map, and ObjType.Text.",
    "summary" : "Converts the Automerge representation to a local type, or returns a failure.",
    "title" : "fromValue(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/FloatingPointScalarConversionError\/Error-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Error Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/TimestampScalarConversionError\/recoverySuggestion"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from LocalizedError.recoverySuggestion. ",
    "summary" : "Inherited from LocalizedError.recoverySuggestion.",
    "title" : "recoverySuggestion"
  },
  {
    "headings" : [
      "Return Value",
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/lookupPath(path:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Looks up the objectId represented by the schema path string you provide.  A string representation of the location within an Automerge document. Return Value The objectId at the schema location you provide, or nil if the path is valid and no object exists in the document. Discussion The method throws errors on invalid paths",
    "summary" : "Looks up the objectId represented by the schema path string you provide.",
    "title" : "lookupPath(path:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ObjId\/CustomDebugStringConvertible-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "CustomDebugStringConvertible Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/receiveSyncMessage(state:msg:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.receiveSyncMessage(state:msg:). ",
    "summary" : "Inherited from DocProtocol.receiveSyncMessage(state:msg:).",
    "title" : "receiveSyncMessage(state:msg:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey\/init(_:)-5azuh"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Creates a new schema path element for a keyed container using the string you provide.  The key for a keyed container.",
    "summary" : "Creates a new schema path element for a keyed container using the string you provide.",
    "title" : "init(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PatchAction\/DeleteMap(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Delete a key from a identified object. ",
    "summary" : "Delete a key from a identified object.",
    "title" : "PatchAction.DeleteMap(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/newWithActor(actor:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "newWithActor(actor:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DecodeSyncStateError"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "DecodeSyncStateError"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/IntScalarConversionError\/errorDescription"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A localized message describing what error occurred. ",
    "summary" : "A localized message describing what error occurred.",
    "title" : "errorDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PathElement\/obj"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "obj"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DecodeSyncStateError\/localizedDescription"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from Error.localizedDescription. ",
    "summary" : "Inherited from Error.localizedDescription.",
    "title" : "localizedDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CounterScalarConversionError\/failureReason"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A localized message describing the reason for the failure. ",
    "summary" : "A localized message describing the reason for the failure.",
    "title" : "failureReason"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/insertInList(obj:index:value:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.insertInList(obj:index:value:). ",
    "summary" : "Inherited from DocProtocol.insertInList(obj:index:value:).",
    "title" : "insertInList(obj:index:value:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CounterScalarConversionError\/notCounterValue(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "CounterScalarConversionError.notCounterValue(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeDocError\/read(from:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.read(from:). ",
    "summary" : "Inherited from FfiConverter.read(from:).",
    "title" : "read(from:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey\/init(_:)-6faed"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Creates a new schema path element for an un-keyed container using the index you provide.  The index position for an un-keyed container.",
    "summary" : "Creates a new schema path element for an un-keyed container using the index you provide.",
    "title" : "init(_:)"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/init(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Load the document in bytes  Discussion bytes can be either the result of calling save() or the concatenation of many calls to encodeChangesSince(heads:), or encodeNewChanges() or the concatenation of any of those, or really any sequence of bytes containing valid encodings of automerge changes.",
    "summary" : "Load the document in bytes",
    "title" : "init(_:)"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ScalarValueRepresentable\/fromScalarValue(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Converts the Automerge representation to a local type, or returns a failure.  The Automerge ScalarValue to be converted into a local type. Return Value The local type, or an error indicating the reason for the failure to convert.",
    "summary" : "Converts the Automerge representation to a local type, or returns a failure.",
    "title" : "fromScalarValue(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Patch\/init(path:action:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "init(path:action:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Value\/Scalar(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A scalar value ",
    "summary" : "A scalar value",
    "title" : "Value.Scalar(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ReceiveSyncError\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ObjId\/ROOT"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The root identifier for an Automerge document. ",
    "summary" : "The root identifier for an Automerge document.",
    "title" : "ROOT"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeKeyValue\/read(from:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.read(from:). ",
    "summary" : "Inherited from FfiConverter.read(from:).",
    "title" : "read(from:)"
  },
  {
    "headings" : [
      "Overview"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ScalarValueRepresentable"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A type that can be represented within an Automerge document.  Overview The ScalarValue representation of a local type is an atomic update, as compared with Value.Object(_:_:) types which represent types that can be incrementally updated by multiple collaborators. You can encode your own types to be used within ObjType.List or ObjType.Map by conforming your type to ScalarValueRepresentable. Implement toScalarValue() with your preferred encoding, returning ScalarValue.Bytes(_:) with the encoded data embedded, and fromValue(_:) to decode into your type.",
    "summary" : "A type that can be represented within an Automerge document.",
    "title" : "ScalarValueRepresentable"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/PatchAction\/deleteSeq(obj:index:length:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "PatchAction.deleteSeq(obj:index:length:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ObjType\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [
      "Overview"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/DocError"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An general document error.  Overview The error is specific to the Rust language binding infrastructure.",
    "summary" : "An general document error.",
    "title" : "DocError"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ObjType\/debugDescription"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from CustomDebugStringConvertible.debugDescription. ",
    "summary" : "Inherited from CustomDebugStringConvertible.debugDescription.",
    "title" : "debugDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/TimestampScalarConversionError\/failureReason"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A localized message describing the reason for the failure. ",
    "summary" : "A localized message describing the reason for the failure.",
    "title" : "failureReason"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CodingKeyLookupError\/InvalidPathElement(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The path element is not valid. ",
    "summary" : "The path element is not valid.",
    "title" : "CodingKeyLookupError.InvalidPathElement(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/incrementInMap(obj:key:by:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "incrementInMap(obj:key:by:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/KeyValue\/init(key:value:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "init(key:value:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeDecodeSyncStateError\/write(_:into:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.write(_:into:). ",
    "summary" : "Inherited from FfiConverter.write(_:into:).",
    "title" : "write(_:into:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PathParseError\/helpAnchor"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from LocalizedError.helpAnchor. ",
    "summary" : "Inherited from LocalizedError.helpAnchor.",
    "title" : "helpAnchor"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeObjId\/lift(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.lift(_:). ",
    "summary" : "Inherited from FfiConverter.lift(_:).",
    "title" : "lift(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/FloatingPointScalarConversionError\/notF64ScalarValue(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FloatingPointScalarConversionError.notF64ScalarValue(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/BooleanScalarConversionError\/notboolValue(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "BooleanScalarConversionError.notboolValue(_:)"
  },
  {
    "headings" : [
      "Return Value",
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Counter\/fromValue(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Converts the Automerge representation to a local type, or returns a failure.  The Automerge Value to be converted as a scalar value into a local type. Return Value The type, converted to a local type, or an error indicating the reason for the failure to convert. Discussion The protocol accepts defines a function to accept a Value primarily for convenience. Value is a higher level enumeration that also includes object types such as ObjType.List, ObjType.Map, and ObjType.Text.",
    "summary" : "Converts the Automerge representation to a local type, or returns a failure.",
    "title" : "fromValue(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/UIntScalarConversionError"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A failure to convert an Automerge scalar value to or from an unsigned integer representation. ",
    "summary" : "A failure to convert an Automerge scalar value to or from an unsigned integer representation.",
    "title" : "UIntScalarConversionError"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ObjType\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/values(obj:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Get all the values in the map or list obj  Discussion For a list this just returns the contents of the list, for a map this returns the values (and not the keys).",
    "summary" : "Get all the values in the map or list obj",
    "title" : "values(obj:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeObjType\/read(from:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.read(from:). ",
    "summary" : "Inherited from FfiConverter.read(from:).",
    "title" : "read(from:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/TimestampScalarConversionError\/notTimetampScalarValue(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "TimestampScalarConversionError.notTimetampScalarValue(_:)"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ScalarValue\/Unknown(typeCode:data:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An unknown, raw scalar type.  Discussion This type is reserved for forward compatibility, and is not expected to be created directly.",
    "summary" : "An unknown, raw scalar type.",
    "title" : "ScalarValue.Unknown(typeCode:data:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ScalarValue\/F64(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A floating point number. ",
    "summary" : "A floating point number.",
    "title" : "ScalarValue.F64(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/UIntScalarConversionError\/errorDescription"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A localized message describing what error occurred. ",
    "summary" : "A localized message describing what error occurred.",
    "title" : "errorDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/lengthAt(obj:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "lengthAt(obj:heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ScalarValue\/CustomStringConvertible-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "CustomStringConvertible Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/values(obj:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.values(obj:). ",
    "summary" : "Inherited from DocProtocol.values(obj:).",
    "title" : "values(obj:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/mapKeys(obj:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "mapKeys(obj:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Counter\/Decodable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Decodable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeKeyValue\/write(_:into:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.write(_:into:). ",
    "summary" : "Inherited from FfiConverter.write(_:into:).",
    "title" : "write(_:into:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Counter\/init(from:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Decodable.init(from:). ",
    "summary" : "Inherited from Decodable.init(from:).",
    "title" : "init(from:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypePatchAction\/read(from:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.read(from:). ",
    "summary" : "Inherited from FfiConverter.read(from:).",
    "title" : "read(from:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/mapEntries(obj:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.mapEntries(obj:). ",
    "summary" : "Inherited from DocProtocol.mapEntries(obj:).",
    "title" : "mapEntries(obj:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ReceiveSyncError\/localizedDescription"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from Error.localizedDescription. ",
    "summary" : "Inherited from Error.localizedDescription.",
    "title" : "localizedDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/FloatingPointScalarConversionError\/errorDescription"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A localized message describing what error occurred. ",
    "summary" : "A localized message describing what error occurred.",
    "title" : "errorDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/StringScalarConversionError\/failureReason"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A localized message describing the reason for the failure. ",
    "summary" : "A localized message describing the reason for the failure.",
    "title" : "failureReason"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/textAt(obj:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Get the value of the text object obj as at heads ",
    "summary" : "Get the value of the text object obj as at heads",
    "title" : "textAt(obj:heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/UIntScalarConversionError\/failureReason"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A localized message describing the reason for the failure. ",
    "summary" : "A localized message describing the reason for the failure.",
    "title" : "failureReason"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeDecoder"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A decoder that initializes codable-conforming types from an Automerge document. ",
    "summary" : "A decoder that initializes codable-conforming types from an Automerge document.",
    "title" : "AutomergeDecoder"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/BooleanScalarConversionError\/errorDescription"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A localized message describing what error occurred. ",
    "summary" : "A localized message describing what error occurred.",
    "title" : "errorDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeActorId\/lower(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.lower(_:). ",
    "summary" : "Inherited from FfiConverter.lower(_:).",
    "title" : "lower(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/root()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "root()"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PathElement\/init(obj:prop:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Creates a new path element.  The object Id of the path element. The property on the object, either a key on a map, or index position in a list.",
    "summary" : "Creates a new path element.",
    "title" : "init(obj:prop:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PathParseError\/LocalizedError-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "LocalizedError Implementations"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/encodeNewChanges()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Encode any changes since the last call to encodeNewChanges  Discussion Returns: encoded changes suitable for sending over the network and applying to another document using applyEncodedChanges(encoded:)",
    "summary" : "Encode any changes since the last call to encodeNewChanges",
    "title" : "encodeNewChanges()"
  },
  {
    "headings" : [
      "Overview"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/AutomergeLifecycle"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Top level initializers and tear down methods.  Overview This is generated by uniffi.",
    "summary" : "Top level initializers and tear down methods.",
    "title" : "AutomergeLifecycle"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypePatchAction_lift(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypePatchAction_lift(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/getInMap(obj:key:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.getInMap(obj:key:). ",
    "summary" : "Inherited from DocProtocol.getInMap(obj:key:).",
    "title" : "getInMap(obj:key:)"
  },
  {
    "headings" : [
      "Overview",
      "Data Model",
      "Reading and writing from a document",
      "Saving, loading, and syncing",
      "Heads and change hashes",
      "Getting notified of remote changes"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A library which provides fast implementations of several different CRDTs, a compact compression format for these CRDTs, and a sync protocol for efficiently transmitting those changes over the network. Overview The central data type of Automerge is a Document which presents a data model somewhat similar to JSON, with string keyed maps and sequences which can be nested within one another. Unlike JSON a Document is a CRDT which means it can be merged with any other Document in a manner which preserves user intent as much as possible. This means that when you have multiple users (or even just multiple devices for one user) working on the same data you can synchronise their changes without necessarily needing a central server. Being able to merge changes is not much use without some way to transfer changes to other peers. You can send the entire document to other devices (and this will be compact and often a good workflow), but Automerge also provides a sync protocol for efficiently getting in sync and staying in sync, which may be more appropriate for real-time collaborative applications and\/or applications with very large data sets. As a developer then you will likely have two concerns: Creating, modifying, and reading data in a Document Saving, loading, and synchronising documents with other devices We’ll get to those in a second, but first let’s introduce the data model. This library provides a fairly low level interface to Automerge documents. There are no mappings from complex swift datatypes like structs or classees to the structure of the Automerge document. It is intended that such higher level wrappers be built on top of this one as separate libraries. Data Model Automerge documents are composed of “objects” - which are composite data structures like a map or a list - and primitive values like booleans and numbers. Objects have an ObjId, which is used to refer to them when making changes to them. Every Automerge document starts with the “root” object, which is a map identified by ROOT. The data model (which is represeented in this library by the Value enum), is the following: Objects (ObjType): Maps (ObjType.Map): string keyed maps Lists (ObjType.List): sequences of other Automerge values Text (ObjType.Text): sequences of unicode characters Primitive values (ScalarValue) byte arrays (ScalarValue.Bytes(_:)) strings (ScalarValue.String(_:)) unsigned integers (ScalarValue.Uint(_:)) signed integers (ScalarValue.Int(_:)) floating point numbers (ScalarValue.F64(_:)) counters (ScalarValue.Counter(_:)) timestamps (ScalarValue.Timestamp(_:)) booleans (ScalarValue.Boolean(_:)) null (ScalarValue.Null) Reading and writing from a document Most operations you perform on a document require that you identify a property of an object. This is either a key of a map, or an index in a sequence. This is represented by overloaded functions which accept either a key: parameter or an index: parameter. For example, get(obj:key:) to get a value out of a map and get(obj:index:) to get a value out of a list. Methods which insert an object into the document are separate to those which insert primitive values (see put(obj:key:value:) vs putObject(obj:key:ty:)). This is because methods which insert an object return the ObjId of the newly created object which can then be used to modify the contents of the new object. See the documentation of Document for more details on the individual methods. Saving, loading, and syncing An Automerge document can be saved using save(). This will produce a compressed encoding of the document which is extremely efficient and which can be loaded using init(_:). In many cases you know that the other end already has some set of changes and you just want to send “new” changes. You can obtain these changes using encodeNewChanges() and encodeChangesSince(heads:). On the other end of the wire you can apply changes using applyEncodedChanges(encoded:). As well as these options Automerge also offers a sync protocol. The sync protocol is intended to be run over a reliable in-order connection between two peers. To use the sync protocol you instantiate a SyncState representing the peer you are connecting with and then generate messages to send to them using generateSyncMessage(state:) and receive messages from them using receiveSyncMessage(state:message:). Heads and change hashes An Automerge document is a little like a git repository in that it is composed of a graph of changes which are identified by a hash. This means that like a git repository a point in the history of an Automerge document can be referenced by its hash. unlike a git repository an Automerge document can have multiple heads for a given point in time, representing a merge of concurrent changes. From time to time you may want to refer to a particular point in the document history - to read values as at that point, or to get the changes since that time. heads() can be used to obtain the current heads of the document, and there are families of methods on document which accept Array[ChangeHash] (which is returned by heads()). Getting notified of remote changes When you apply changes received from a remote document (or merged from a separate local document) you may need to know what changed as a result of those changes so that you can update your UI. Any document method which accepts remote changes has a *WithPatches variant which returns an array of Patches, representing the change.",
    "summary" : "A library which provides fast implementations of several different CRDTs, a compact compression format for these CRDTs, and a sync protocol for efficiently transmitting those changes over the network.",
    "title" : "Automerge"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ReceiveSyncError\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeObjId\/lower(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.lower(_:). ",
    "summary" : "Inherited from FfiConverter.lower(_:).",
    "title" : "lower(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeActorId\/write(_:into:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.write(_:into:). ",
    "summary" : "Inherited from FfiConverter.write(_:into:).",
    "title" : "write(_:into:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/putInMap(obj:key:value:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "putInMap(obj:key:value:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/UIntScalarConversionError\/LocalizedError-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "LocalizedError Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CodingKeyLookupError\/NoPathForSingleValue(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "No coding path was provided for encoding a single value into the Automerge document. ",
    "summary" : "No coding path was provided for encoding a single value into the Automerge document.",
    "title" : "CodingKeyLookupError.NoPathForSingleValue(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CodingKeyLookupError\/localizedDescription"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from Error.localizedDescription. ",
    "summary" : "Inherited from Error.localizedDescription.",
    "title" : "localizedDescription"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/merge(other:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Merge this document with other  Discussion if you need to know what changed in the document as a result of the merge try using mergeWithPatches(other:)",
    "summary" : "Merge this document with other",
    "title" : "merge(other:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/StringScalarConversionError\/notstringScalarValue(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "StringScalarConversionError.notstringScalarValue(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/KeyValue\/==(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.==(_:_:). ",
    "summary" : "Inherited from Equatable.==(_:_:).",
    "title" : "==(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/init()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "init()"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/BytesScalarConversionError\/LocalizedError-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "LocalizedError Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/insertObject(obj:index:ty:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Insert a new instance of ty in the list obj at index ",
    "summary" : "Insert a new instance of ty in the list obj at index",
    "title" : "insertObject(obj:index:ty:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/valuesAt(obj:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Get the values in the map or list obj as at heads ",
    "summary" : "Get the values in the map or list obj as at heads",
    "title" : "valuesAt(obj:heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeScalarValue_lift(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeScalarValue_lift(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/setActor(actor:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "setActor(actor:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ScalarValue\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PathParseError\/errorDescription"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A localized message describing the error. ",
    "summary" : "A localized message describing the error.",
    "title" : "errorDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/init()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Create an new empty document with a random actor ID ",
    "summary" : "Create an new empty document with a random actor ID",
    "title" : "init()"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeEncoder\/userInfo"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "userInfo"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeObjId\/write(_:into:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.write(_:into:). ",
    "summary" : "Inherited from FfiConverter.write(_:into:).",
    "title" : "write(_:into:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/mapEntriesAt(obj:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.mapEntriesAt(obj:heads:). ",
    "summary" : "Inherited from DocProtocol.mapEntriesAt(obj:heads:).",
    "title" : "mapEntriesAt(obj:heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Counter\/init(_:)-8t7n4"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "init(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/mapEntries(obj:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Get the (key,value) entries in the map obj ",
    "summary" : "Get the (key,value) entries in the map obj",
    "title" : "mapEntries(obj:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/LoadError\/localizedDescription"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from Error.localizedDescription. ",
    "summary" : "Inherited from Error.localizedDescription.",
    "title" : "localizedDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypePatchAction_lower(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypePatchAction_lower(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/getAllInMap(obj:key:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "getAllInMap(obj:key:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Prop\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PatchAction\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/KeyValue\/hash(into:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Hashable.hash(into:). ",
    "summary" : "Inherited from Hashable.hash(into:).",
    "title" : "hash(into:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeDoc\/lower(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.lower(_:). ",
    "summary" : "Inherited from FfiConverter.lower(_:).",
    "title" : "lower(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/textAt(obj:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "textAt(obj:heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/StringScalarConversionError\/notstringValue(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "StringScalarConversionError.notstringValue(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CodingKeyLookupError\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Patch\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypePatchAction"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypePatchAction"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/setActor(actor:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.setActor(actor:). ",
    "summary" : "Inherited from DocProtocol.setActor(actor:).",
    "title" : "setActor(actor:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/mapKeysAt(obj:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.mapKeysAt(obj:heads:). ",
    "summary" : "Inherited from DocProtocol.mapKeysAt(obj:heads:).",
    "title" : "mapKeysAt(obj:heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeValue"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeValue"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ScalarValue\/f64(value:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "ScalarValue.f64(value:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeChangeHash\/read(from:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.read(from:). ",
    "summary" : "Inherited from FfiConverter.read(from:).",
    "title" : "read(from:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ReceiveSyncError"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "ReceiveSyncError"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/SyncState\/decode(bytes:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "decode(bytes:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeKeyValue_lift(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeKeyValue_lift(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ReceiveSyncError\/InvalidMessage(message:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "ReceiveSyncError.InvalidMessage(message:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ObjId"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Typealias from the type name used in the UDL file to the builtin type.  This is needed because the UDL type name is used in function\/method signatures. ",
    "summary" : "Typealias from the type name used in the UDL file to the builtin type.  This is needed because the UDL type name is used in function\/method signatures.",
    "title" : "ObjId"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/encodeNewChanges()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.encodeNewChanges(). ",
    "summary" : "Inherited from DocProtocol.encodeNewChanges().",
    "title" : "encodeNewChanges()"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey\/debugDescription"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from CodingKey.debugDescription. ",
    "summary" : "Inherited from CodingKey.debugDescription.",
    "title" : "debugDescription"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/getAt(obj:index:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Get the value at index in list obj as at heads  Discussion Note that if there are multiple conflicting values this method will return one of them  arbitrarily (but deterministically). If you need all the conflicting values see getAllAt(obj:index:heads:)",
    "summary" : "Get the value at index in list obj as at heads",
    "title" : "getAt(obj:index:heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/heads()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "heads()"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ObjType\/list"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "ObjType.list"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/merge(other:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.merge(other:). ",
    "summary" : "Inherited from DocProtocol.merge(other:).",
    "title" : "merge(other:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/TimestampScalarConversionError\/localizedDescription"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from Error.localizedDescription. ",
    "summary" : "Inherited from Error.localizedDescription.",
    "title" : "localizedDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/generateSyncMessage(state:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "generateSyncMessage(state:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/getAllInList(obj:index:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "getAllInList(obj:index:)"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ScalarValueRepresentable\/toScalarValue()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Converts a local type into an Automerge scalar value.  Return Value The ScalarValue that aligns with the provided type",
    "summary" : "Converts a local type into an Automerge scalar value.",
    "title" : "toScalarValue()"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/KeyValue"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "KeyValue"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/SchemaStrategy\/readonly"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Allows updating of values only. If the schema does not pre-exist in the format that the encoder expects, the lookup doesn’t create schema and captures an error for later presentation. ",
    "summary" : "Allows updating of values only. If the schema does not pre-exist in the format that the encoder expects, the lookup doesn’t create schema and captures an error for later presentation.",
    "title" : "SchemaStrategy.readonly"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/splice(obj:start:delete:values:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.splice(obj:start:delete:values:). ",
    "summary" : "Inherited from DocProtocol.splice(obj:start:delete:values:).",
    "title" : "splice(obj:start:delete:values:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Counter"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A type that represents the value of an Automerge counter. ",
    "summary" : "A type that represents the value of an Automerge counter.",
    "title" : "Counter"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/save()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Encode this document in a compressed binary format ",
    "summary" : "Encode this document in a compressed binary format",
    "title" : "save()"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ScalarValue\/Bytes(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A byte buffer. ",
    "summary" : "A byte buffer.",
    "title" : "ScalarValue.Bytes(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/IntScalarConversionError\/notIntScalarValue(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "IntScalarConversionError.notIntScalarValue(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ObjType\/Text"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A type that represents sequence of unicode characters. ",
    "summary" : "A type that represents sequence of unicode characters.",
    "title" : "ObjType.Text"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/save()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "save()"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/IntScalarConversionError\/helpAnchor"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from LocalizedError.helpAnchor. ",
    "summary" : "Inherited from LocalizedError.helpAnchor.",
    "title" : "helpAnchor"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypePatch\/write(_:into:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.write(_:into:). ",
    "summary" : "Inherited from FfiConverter.write(_:into:).",
    "title" : "write(_:into:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/StringScalarConversionError\/recoverySuggestion"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from LocalizedError.recoverySuggestion. ",
    "summary" : "Inherited from LocalizedError.recoverySuggestion.",
    "title" : "recoverySuggestion"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/LoadError\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CodingKeyLookupError\/recoverySuggestion"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from LocalizedError.recoverySuggestion. ",
    "summary" : "Inherited from LocalizedError.recoverySuggestion.",
    "title" : "recoverySuggestion"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/increment(obj:index:by:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Increment the counter at index in list obj by the amount by ",
    "summary" : "Increment the counter at index in list obj by the amount by",
    "title" : "increment(obj:index:by:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/putInMap(obj:key:value:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.putInMap(obj:key:value:). ",
    "summary" : "Inherited from DocProtocol.putInMap(obj:key:value:).",
    "title" : "putInMap(obj:key:value:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeScalarValue\/read(from:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.read(from:). ",
    "summary" : "Inherited from FfiConverter.read(from:).",
    "title" : "read(from:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/IntScalarConversionError"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A failure to convert an Automerge scalar value to or from a signed integer representation. ",
    "summary" : "A failure to convert an Automerge scalar value to or from a signed integer representation.",
    "title" : "IntScalarConversionError"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CounterScalarConversionError"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A failure to convert an Automerge scalar value to or from a signer integer counter representation. ",
    "summary" : "A failure to convert an Automerge scalar value to or from a signer integer counter representation.",
    "title" : "CounterScalarConversionError"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ObjId"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The unique internal identifier for an object stored in an Automerge document. ",
    "summary" : "The unique internal identifier for an object stored in an Automerge document.",
    "title" : "ObjId"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ActorId\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeReceiveSyncError"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeReceiveSyncError"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/SchemaStrategy"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A type that represents the encoder strategy to establish or error on differences in existing Automerge documents as compared to expected encoding. ",
    "summary" : "A type that represents the encoder strategy to establish or error on differences in existing Automerge documents as compared to expected encoding.",
    "title" : "SchemaStrategy"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ObjId\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/BytesScalarConversionError\/recoverySuggestion"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from LocalizedError.recoverySuggestion. ",
    "summary" : "Inherited from LocalizedError.recoverySuggestion.",
    "title" : "recoverySuggestion"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/encodeChangesSince(heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Encode any changes made since heads  Discussion Returns: encoded changes suitable for sending over the network and applying to another document using applyEncodedChanges(encoded:)",
    "summary" : "Encode any changes made since heads",
    "title" : "encodeChangesSince(heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/actor"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The actor ID of this document ",
    "summary" : "The actor ID of this document",
    "title" : "actor"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocError\/Error-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Error Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/getAllAtInMap(obj:key:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.getAllAtInMap(obj:key:heads:). ",
    "summary" : "Inherited from DocProtocol.getAllAtInMap(obj:key:heads:).",
    "title" : "getAllAtInMap(obj:key:heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/PathElement\/init(prop:obj:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "init(prop:obj:)"
  },
  {
    "headings" : [
      "Overview"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Prop"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A type that represents a property on an object within an Automerge document.  Overview The property is either a Prop.Key(_:), in the from of a String to a map, or a Prop.Index(_:) with the index position represented as a 64-bit unsigned integer.",
    "summary" : "A type that represents a property on an object within an Automerge document.",
    "title" : "Prop"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocError\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/getAtInList(obj:index:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.getAtInList(obj:index:heads:). ",
    "summary" : "Inherited from DocProtocol.getAtInList(obj:index:heads:).",
    "title" : "getAtInList(obj:index:heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeEncoder"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An encoder that stores codable-conforming types into an Automerge document. ",
    "summary" : "An encoder that stores codable-conforming types into an Automerge document.",
    "title" : "AutomergeEncoder"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeEncoder\/encode(_:)-3sde1"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "encode(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/StringScalarConversionError"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A failure to convert an Automerge scalar value to or from a String representation. ",
    "summary" : "A failure to convert an Automerge scalar value to or from a String representation.",
    "title" : "StringScalarConversionError"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ObjType\/text"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "ObjType.text"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/FloatingPointScalarConversionError"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A failure to convert an Automerge scalar value to or from a 64-bit floating-point value representation. ",
    "summary" : "A failure to convert an Automerge scalar value to or from a 64-bit floating-point value representation.",
    "title" : "FloatingPointScalarConversionError"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/text(obj:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Get the value of the text object obj ",
    "summary" : "Get the value of the text object obj",
    "title" : "text(obj:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeDecoder\/decode(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "decode(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeChangeHash\/lift(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.lift(_:). ",
    "summary" : "Inherited from FfiConverter.lift(_:).",
    "title" : "lift(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Counter\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/TimestampScalarConversionError\/LocalizedError-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "LocalizedError Implementations"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey\/intValue"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The integer value of this schema path element.  Discussion If nil, the schema path element is expected to be a string that represents a key for a keyed container.",
    "summary" : "The integer value of this schema path element.",
    "title" : "intValue"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ScalarValueRepresentable\/ConvertError"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The error type associated with failed attempted conversion into or out of Automerge representation. ",
    "summary" : "The error type associated with failed attempted conversion into or out of Automerge representation.",
    "title" : "ConvertError"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ActorId\/CustomStringConvertible-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "CustomStringConvertible Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeChangeHash\/lower(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.lower(_:). ",
    "summary" : "Inherited from FfiConverter.lower(_:).",
    "title" : "lower(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/SyncState\/theirHeads"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "theirHeads"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/KeyValue\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/StringScalarConversionError\/helpAnchor"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from LocalizedError.helpAnchor. ",
    "summary" : "Inherited from LocalizedError.helpAnchor.",
    "title" : "helpAnchor"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/SyncState\/encode()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from SyncStateProtocol.encode(). ",
    "summary" : "Inherited from SyncStateProtocol.encode().",
    "title" : "encode()"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Prop\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PatchAction\/Put(_:_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Put a new value at the property for the identified object.  Discussion The property included within the Put can be either an index to a sequence, or a key into a map.",
    "summary" : "Put a new value at the property for the identified object.",
    "title" : "PatchAction.Put(_:_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/encodeChangesSince(heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "encodeChangesSince(heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "Doc"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/getAtInMap(obj:key:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "getAtInMap(obj:key:heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Value\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/PatchAction\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeDecoder\/doc"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "doc"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/length(obj:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The length of the list obj ",
    "summary" : "The length of the list obj",
    "title" : "length(obj:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Counter\/ScalarValueRepresentable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "ScalarValueRepresentable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/getInMap(obj:key:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "getInMap(obj:key:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/forkAt(heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "forkAt(heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/putObject(obj:key:ty:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Set or update key in map obj to a new instance of ty ",
    "summary" : "Set or update key in map obj to a new instance of ty",
    "title" : "putObject(obj:key:ty:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeValue\/write(_:into:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.write(_:into:). ",
    "summary" : "Inherited from FfiConverter.write(_:into:).",
    "title" : "write(_:into:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PathParseError\/recoverySuggestion"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from LocalizedError.recoverySuggestion. ",
    "summary" : "Inherited from LocalizedError.recoverySuggestion.",
    "title" : "recoverySuggestion"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/SchemaStrategy\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/DeleteSeq\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/PathElement\/obj"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "obj"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/IntScalarConversionError\/failureReason"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A localized message describing the reason for the failure. ",
    "summary" : "A localized message describing the reason for the failure.",
    "title" : "failureReason"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeEncoder\/init(doc:strategy:cautiousWrite:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "init(doc:strategy:cautiousWrite:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/heads()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.heads(). ",
    "summary" : "Inherited from DocProtocol.heads().",
    "title" : "heads()"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeObjType_lift(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeObjType_lift(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/BytesScalarConversionError\/Error-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Error Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ReceiveSyncError\/Error-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Error Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PathParseError\/EmptyListIndex(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The path element, structured as a Index location, doesn’t include an index value. ",
    "summary" : "The path element, structured as a Index location, doesn’t include an index value.",
    "title" : "PathParseError.EmptyListIndex(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ScalarValue\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/putInList(obj:index:value:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.putInList(obj:index:value:). ",
    "summary" : "Inherited from DocProtocol.putInList(obj:index:value:).",
    "title" : "putInList(obj:index:value:)"
  },
  {
    "headings" : [
      "Overview"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/SyncState"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A synchronisation session with another peer  Overview The sync protocol is designed to run over a reliable in-order transport with the SyncState tracking the state between successive calls to generateSyncMessage(state:) and receiveSyncMessage(state:message:). Assuming the existence of some network infrastructure for sending and receiving messages on the transport a loop to stay in sync might look like the following  Sync states can be persisted. If you know a peer might connect to you again you can use encode() to save the state and init(bytes:) to decode it.",
    "summary" : "A synchronisation session with another peer",
    "title" : "SyncState"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Counter\/toScalarValue()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Converts a local type into an Automerge scalar value.  Return Value The ScalarValue that aligns with the provided type",
    "summary" : "Converts a local type into an Automerge scalar value.",
    "title" : "toScalarValue()"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeKeyValue_lower(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeKeyValue_lower(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Counter\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/FloatingPointScalarConversionError\/recoverySuggestion"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from LocalizedError.recoverySuggestion. ",
    "summary" : "Inherited from LocalizedError.recoverySuggestion.",
    "title" : "recoverySuggestion"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Counter\/value"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The value of the counter. ",
    "summary" : "The value of the counter.",
    "title" : "value"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeReceiveSyncError\/write(_:into:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.write(_:into:). ",
    "summary" : "Inherited from FfiConverter.write(_:into:).",
    "title" : "write(_:into:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/put(obj:index:value:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Set or update the value at index in the sequence obj to value ",
    "summary" : "Set or update the value at index in the sequence obj to value",
    "title" : "put(obj:index:value:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/path(obj:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Get the path to obj in the document ",
    "summary" : "Get the path to obj in the document",
    "title" : "path(obj:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/TimestampScalarConversionError\/errorDescription"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A localized message describing what error occurred. ",
    "summary" : "A localized message describing what error occurred.",
    "title" : "errorDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/putObjectInList(obj:index:objType:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "putObjectInList(obj:index:objType:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeDecoder\/decode(_:from:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "decode(_:from:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/lengthAt(obj:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.lengthAt(obj:heads:). ",
    "summary" : "Inherited from DocProtocol.lengthAt(obj:heads:).",
    "title" : "lengthAt(obj:heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CodingKeyLookupError\/Error-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Error Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/getAllAt(obj:index:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Get all the possibly conflicting values for index in list obj as at heads ",
    "summary" : "Get all the possibly conflicting values for index in list obj as at heads",
    "title" : "getAllAt(obj:index:heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/BytesScalarConversionError\/failureReason"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A localized message describing the reason for the failure. ",
    "summary" : "A localized message describing the reason for the failure.",
    "title" : "failureReason"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Patch\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/spliceText(obj:start:delete:chars:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "spliceText(obj:start:delete:chars:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Text\/init(from:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Decodable.init(from:). ",
    "summary" : "Inherited from Decodable.init(from:).",
    "title" : "init(from:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/BooleanScalarConversionError\/localizedDescription"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from Error.localizedDescription. ",
    "summary" : "Inherited from Error.localizedDescription.",
    "title" : "localizedDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CodingKeyLookupError\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/KeyValue\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeProp_lift(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeProp_lift(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Patch\/action"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The the type of change, and the value that patch updated, if relevant to the change. ",
    "summary" : "The the type of change, and the value that patch updated, if relevant to the change.",
    "title" : "action"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeDecodeSyncStateError"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeDecodeSyncStateError"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocError"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "DocError"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/PatchAction"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "PatchAction"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/PathElement\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/IntScalarConversionError\/recoverySuggestion"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from LocalizedError.recoverySuggestion. ",
    "summary" : "Inherited from LocalizedError.recoverySuggestion.",
    "title" : "recoverySuggestion"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/FloatingPointScalarConversionError\/localizedDescription"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from Error.localizedDescription. ",
    "summary" : "Inherited from Error.localizedDescription.",
    "title" : "localizedDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/getInList(obj:index:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.getInList(obj:index:). ",
    "summary" : "Inherited from DocProtocol.getInList(obj:index:).",
    "title" : "getInList(obj:index:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey\/description"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A string description of the schema path element. ",
    "summary" : "A string description of the schema path element.",
    "title" : "description"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ReceiveSyncError\/Internal(message:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "ReceiveSyncError.Internal(message:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/actorId()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.actorId(). ",
    "summary" : "Inherited from DocProtocol.actorId().",
    "title" : "actorId()"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Text\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/BooleanScalarConversionError\/failureReason"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A localized message describing the reason for the failure. ",
    "summary" : "A localized message describing the reason for the failure.",
    "title" : "failureReason"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/BooleanScalarConversionError"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A failure to convert an Automerge scalar value to or from a Boolean representation. ",
    "summary" : "A failure to convert an Automerge scalar value to or from a Boolean representation.",
    "title" : "BooleanScalarConversionError"
  },
  {
    "headings" : [
      "Overview",
      "Setup",
      "Creating the address book",
      "The “initial data” problem",
      "Generating a skeleton document",
      "Implementing `create`",
      "Adding a contact",
      "Listing contacts",
      "Updating a contact",
      "Merging address books",
      "Sync"
    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AddressBookExample"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Building a CLI address book application using Automerge. Overview All the code herein can also be found in the demo repository Let’s imagine we’re building a simple collaborative address book with a structure similar to the following JSON:  We’re going to build a simple CLI application called contaaacts for collaborating on an address book. Here’s what we want to be able to do:  Setup We’re creating a simple command line application, we’ll have a single file called Contaaacts.swift where we parse and dispatch arguments. No error handling of any kind because this is an example. As we go through the rest of this guide we’ll fill in the implementations of the handlers.  Creating the address book To create an address book we just need to create an Automerge document with an empty contacts array in it. This is conceptually simple but there’s a wrinkle, which we refer to as the “initial data” problem. Once we’ve explained the problem, the approach we take will make more sense. The “initial data” problem Automerge documents contain “objects”, which are maps, lists, or text objects. These objects have an ID (ObjId). Every Automerge document contains a “root” ID (ROOT)which is a map, any time you create a new object in an Automerge document the new object has an ID you use to refer to it. The reason you need to know this is because the IDs which Automerge generates are used to determine how to merge documents, this means that for two documents with similar structure to merge in the way we expect, they need to share a history. Let’s make this a bit more concrete. We are building a contact book application, the core data structure is a list of contacts under the contacts key in the document. The merge behaviour we want is that when two nodes concurrently add contacts to the contact book, they end up in the same sequence. In terms of the Automerge data model then, the contacts key is a property in the root object which contains a list object. The list has an ID - obtained by calling putObject(obj:key:ty:) with ROOT, \"contacts\", and ObjType.List. For concurrent insertions into this list to merge, we want all insertions to reference the same ObjId for the list, but every time you call putObject you get a new object ID. What this means is that every node needs to share a basic skeleton document which already has an empty \"contacts\" list in it. We are very much aware that this is not a good developer experience and we are thinking about ways to make this easier. See this issue Generating a skeleton document The easiest way to have every peer start from a shared history is to use the Automerge command line tools (installable by using cargo install automerge-cli) to generate an Automerge document from a JSON skeleton, and then including the bytes of this document as a resource in the application bundle.  You can verify the structure of the document by doing automerge export skeleton We bundle the skeleton as a resource in the application, see the demo repository for details. Implementing `create` Now that we have the skeleton document, implementing \"create\" is quite simple, we just output the contents of the bundled resource.  Adding a contact To add a contact we need to load the contents of the address book, then insert an ObjType.Map into the contacts list. Like so:  Note that we are using text objects to represent the name and email fields. Automerge does have a primitive string type (ScalarValue.String(_:)) but it’s generally best to use text. There’s very little extra cost to a text object and text objects support concurrent edits. Listing contacts To list contacts we iterate over each value in the contacts list, printing them out.  Updating a contact Here we load the document, loop over the contacts in the contacts list, and if we find a matching name we update the email.  Merging address books  Sync There’s quite a bit of ceremony involved in network programming in Swift, so we don’t repeat the code here, see the demo for the gory details.",
    "summary" : "Building a CLI address book application using Automerge.",
    "title" : "Address Book Example"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CounterScalarConversionError\/helpAnchor"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from LocalizedError.helpAnchor. ",
    "summary" : "Inherited from LocalizedError.helpAnchor.",
    "title" : "helpAnchor"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/keysAt(obj:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Get all the keys that were in the map obj as at heads ",
    "summary" : "Get all the keys that were in the map obj as at heads",
    "title" : "keysAt(obj:heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/DeleteSeq"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A sequence of deletions. ",
    "summary" : "A sequence of deletions.",
    "title" : "DeleteSeq"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ChangeHash"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Typealias from the type name used in the UDL file to the builtin type.  This is needed because the UDL type name is used in function\/method signatures. ",
    "summary" : "Typealias from the type name used in the UDL file to the builtin type.  This is needed because the UDL type name is used in function\/method signatures.",
    "title" : "ChangeHash"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ObjType\/map"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "ObjType.map"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Patch\/action"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "action"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeSyncState\/write(_:into:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.write(_:into:). ",
    "summary" : "Inherited from FfiConverter.write(_:into:).",
    "title" : "write(_:into:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/LoadError\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/path(obj:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "path(obj:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/FloatingPointScalarConversionError\/notF64Value(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FloatingPointScalarConversionError.notF64Value(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CodingKeyLookupError\/PathExtendsThroughText(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The path provided extends through Automerge Text, a leaf node in the schema. ",
    "summary" : "The path provided extends through Automerge Text, a leaf node in the schema.",
    "title" : "CodingKeyLookupError.PathExtendsThroughText(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/StringScalarConversionError\/LocalizedError-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "LocalizedError Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/forkAt(heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.forkAt(heads:). ",
    "summary" : "Inherited from DocProtocol.forkAt(heads:).",
    "title" : "forkAt(heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/valuesAt(obj:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "valuesAt(obj:heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/SyncState"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "SyncState"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CodingKeyLookupError\/errorDescription"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A localized message describing the error. ",
    "summary" : "A localized message describing the error.",
    "title" : "errorDescription"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PatchAction\/SpliceText(_:_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Splices characters into and\/or removes characters from the identified object at a given position within it.  Discussion The unsigned 64bit integer is the index to a UTF-8 code point, and not a grapheme cluster index. If you are working with Characters from a String, you will need to calculate the offset to insert it correctly.",
    "summary" : "Splices characters into and\/or removes characters from the identified object at a given position within it.",
    "title" : "PatchAction.SpliceText(_:_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Patch\/==(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.==(_:_:). ",
    "summary" : "Inherited from Equatable.==(_:_:).",
    "title" : "==(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ObjType\/Map"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A type that represents a map that uses String as keys. ",
    "summary" : "A type that represents a map that uses String as keys.",
    "title" : "ObjType.Map"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/get(obj:index:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Get the value at index from the list obj  Discussion Note that if there are multiple conflicting values this method will return one of them  arbitrarily (but deterministically). If you need all the conflicting values see getAll(obj:index:)",
    "summary" : "Get the value at index from the list obj",
    "title" : "get(obj:index:)"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/SchemaStrategy\/createWhenNeeded"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Creates schema where none exists, errors on schema mismatch.  Discussion Basic schema checking for containers that creates relevant objects in Automerge at the relevant path doesn’t exist. If there is something in an existing Automerge document that doesn’t match the type of container, or if the path is a leaf-node (a scalar value, or a Text instance), then the lookup captures the schema error for later presentation.",
    "summary" : "Creates schema where none exists, errors on schema mismatch.",
    "title" : "SchemaStrategy.createWhenNeeded"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/BytesScalarConversionError\/helpAnchor"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from LocalizedError.helpAnchor. ",
    "summary" : "Inherited from LocalizedError.helpAnchor.",
    "title" : "helpAnchor"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PathParseError\/InvalidPathElement(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The path element is not valid. ",
    "summary" : "The path element is not valid.",
    "title" : "PathParseError.InvalidPathElement(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Value\/object(typ:id:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "Value.object(typ:id:)"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/getAt(obj:key:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Get the value at key in map obj as at heads  Discussion Note that if there are multiple conflicting values this method will return one of them  arbitrarily (but deterministically). If you need all the conflicting values see getAllAt(obj:key:heads:)",
    "summary" : "Get the value at key in map obj as at heads",
    "title" : "getAt(obj:key:heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/UIntScalarConversionError\/notUIntValue(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "UIntScalarConversionError.notUIntValue(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/PatchAction\/insert(obj:index:values:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "PatchAction.insert(obj:index:values:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ChangeHash\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/applyEncodedChangesWithPatches(encoded:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Apply encoded changes to this document  Discussion The input to this function can be anything returned by save(), encodeNewChanges(), encodeChangesSince(heads:) or any concatenation of those.",
    "summary" : "Apply encoded changes to this document",
    "title" : "applyEncodedChangesWithPatches(encoded:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ScalarValue\/Counter(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An integer counter. ",
    "summary" : "An integer counter.",
    "title" : "ScalarValue.Counter(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/DeleteSeq\/obj"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The object to which the delete applies. ",
    "summary" : "The object to which the delete applies.",
    "title" : "obj"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/KeyValue\/key"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "key"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CodingKeyLookupError\/AutomergeDocError(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An underlying Automerge Document error. ",
    "summary" : "An underlying Automerge Document error.",
    "title" : "CodingKeyLookupError.AutomergeDocError(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CodingKeyLookupError\/==(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.==(_:_:). ",
    "summary" : "Inherited from Equatable.==(_:_:).",
    "title" : "==(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/DocError\/Error-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Error Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/delete(obj:key:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Delete key from the map obj ",
    "summary" : "Delete key from the map obj",
    "title" : "delete(obj:key:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/encodeChangesSince(heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.encodeChangesSince(heads:). ",
    "summary" : "Inherited from DocProtocol.encodeChangesSince(heads:).",
    "title" : "encodeChangesSince(heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/getAllAt(obj:key:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Get all the possibly conflicting values for key in map obj as at heads ",
    "summary" : "Get all the possibly conflicting values for key in map obj as at heads",
    "title" : "getAllAt(obj:key:heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AutomergeDecoder\/userInfo"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "userInfo"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/UIntScalarConversionError\/localizedDescription"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from Error.localizedDescription. ",
    "summary" : "Inherited from Error.localizedDescription.",
    "title" : "localizedDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeValue\/read(from:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.read(from:). ",
    "summary" : "Inherited from FfiConverter.read(from:).",
    "title" : "read(from:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Patch\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Prop\/index(value:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "Prop.index(value:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypePathElement"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypePathElement"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [
      "Return Value"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/generateSyncMessage(state:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Generate a sync message to send to the peer represented by state  Return Value A message to send to the peer, or nil if we are in sync",
    "summary" : "Generate a sync message to send to the peer represented by state",
    "title" : "generateSyncMessage(state:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/heads()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Returns: a sequence of ChangeHash representing the changes which were made to the document as a result of the merge ",
    "summary" : "Returns: a sequence of ChangeHash representing the changes which were made to the document as a result of the merge",
    "title" : "heads()"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/receiveSyncMessageWithPatches(state:message:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Receive a sync message from the peer represented by state, returning patches  Discussion Returns: a sequence of Patch representing the changes which were made to the document as a result of the message.",
    "summary" : "Receive a sync message from the peer represented by state, returning patches",
    "title" : "receiveSyncMessageWithPatches(state:message:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ScalarValue\/Boolean(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A Boolean value. ",
    "summary" : "A Boolean value.",
    "title" : "ScalarValue.Boolean(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/KeyValue\/value"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "value"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ScalarValue\/uint(value:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "ScalarValue.uint(value:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/mapEntriesAt(obj:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Get the (key,value) entries in the map obj as at heads ",
    "summary" : "Get the (key,value) entries in the map obj as at heads",
    "title" : "mapEntriesAt(obj:heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/PathElement\/Hashable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Hashable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/deleteInMap(obj:key:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "deleteInMap(obj:key:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Text\/description"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from CustomStringConvertible.description. ",
    "summary" : "Inherited from CustomStringConvertible.description.",
    "title" : "description"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/spliceText(obj:start:delete:chars:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.spliceText(obj:start:delete:chars:). ",
    "summary" : "Inherited from DocProtocol.spliceText(obj:start:delete:chars:).",
    "title" : "spliceText(obj:start:delete:chars:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/BytesScalarConversionError"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A failure to convert an Automerge scalar value to or from a byte representation. ",
    "summary" : "A failure to convert an Automerge scalar value to or from a byte representation.",
    "title" : "BytesScalarConversionError"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeValue_lower(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeValue_lower(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/incrementInList(obj:index:by:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.incrementInList(obj:index:by:). ",
    "summary" : "Inherited from DocProtocol.incrementInList(obj:index:by:).",
    "title" : "incrementInList(obj:index:by:)"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/SyncState\/reset()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Reset the state if the connection is interrupted  Discussion Some of the state in a SyncState relies on the reliable, in-order nature of the transport. If a connection has dropped and this can no longer be relied (messages may have been lost, or may be redelivered etc. etc.) then you must call reset() before continuing to synch.",
    "summary" : "Reset the state if the connection is interrupted",
    "title" : "reset()"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/insertInList(obj:index:value:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "insertInList(obj:index:value:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ScalarValue\/Int(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A signed integer. ",
    "summary" : "A signed integer.",
    "title" : "ScalarValue.Int(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ScalarValue\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/BytesScalarConversionError\/notbytesScalarValue(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "BytesScalarConversionError.notbytesScalarValue(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Prop\/Index(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An index into a sequence. ",
    "summary" : "An index into a sequence.",
    "title" : "Prop.Index(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CodingKeyLookupError\/helpAnchor"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from LocalizedError.helpAnchor. ",
    "summary" : "Inherited from LocalizedError.helpAnchor.",
    "title" : "helpAnchor"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PathElement\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CounterScalarConversionError\/notCounterScalarValue(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "CounterScalarConversionError.notCounterScalarValue(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeActorId\/read(from:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.read(from:). ",
    "summary" : "Inherited from FfiConverter.read(from:).",
    "title" : "read(from:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Text"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A type that presents a string backed by a Sequential CRDT ",
    "summary" : "A type that presents a string backed by a Sequential CRDT",
    "title" : "Text"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/applyEncodedChanges(encoded:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Apply encoded changes to this document  Discussion The input to this function can be anything returned by save(), encodeNewChanges(), encodeChangesSince(heads:) or any concatenation of those. if you need to know what changed in the document as a result of the applied changes try using applyEncodedChangesWithPatches(encoded:)",
    "summary" : "Apply encoded changes to this document",
    "title" : "applyEncodedChanges(encoded:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ScalarValue\/string(value:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "ScalarValue.string(value:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeSyncState\/read(from:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.read(from:). ",
    "summary" : "Inherited from FfiConverter.read(from:).",
    "title" : "read(from:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Value\/CustomDebugStringConvertible-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "CustomDebugStringConvertible Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/applyEncodedChangesWithPatches(changes:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.applyEncodedChangesWithPatches(changes:). ",
    "summary" : "Inherited from DocProtocol.applyEncodedChangesWithPatches(changes:).",
    "title" : "applyEncodedChangesWithPatches(changes:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ReceiveSyncError\/Error-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Error Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeDoc\/lift(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.lift(_:). ",
    "summary" : "Inherited from FfiConverter.lift(_:).",
    "title" : "lift(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypePathElement\/read(from:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.read(from:). ",
    "summary" : "Inherited from FfiConverter.read(from:).",
    "title" : "read(from:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/mapKeysAt(obj:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "mapKeysAt(obj:heads:)"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Patch\/path"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The path to the object that the update effects.  Discussion The path doesn’t identify the property or index being updated on that object, that information is contained with the associated action.",
    "summary" : "The path to the object that the update effects.",
    "title" : "path"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/insertObjectInList(obj:index:objType:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "insertObjectInList(obj:index:objType:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeSyncState"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeSyncState"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/mapEntriesAt(obj:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "mapEntriesAt(obj:heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/text(obj:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.text(obj:). ",
    "summary" : "Inherited from DocProtocol.text(obj:).",
    "title" : "text(obj:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ActorId\/description"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from CustomStringConvertible.description. ",
    "summary" : "Inherited from CustomStringConvertible.description.",
    "title" : "description"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/length(obj:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "length(obj:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/putObject(obj:index:ty:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Set or update index in list obj to a new instance of ty ",
    "summary" : "Set or update index in list obj to a new instance of ty",
    "title" : "putObject(obj:index:ty:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/SchemaStrategy\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ObjType\/List"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A type that represents a sequence of arbitrary Automerge values. ",
    "summary" : "A type that represents a sequence of arbitrary Automerge values.",
    "title" : "ObjType.List"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/load(bytes:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "load(bytes:)"
  },
  {
    "headings" : [
      "Overview"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/LoadError"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An error that indicates a problem loading the document.  Overview The error is specific to the Rust language binding infrastructure.",
    "summary" : "An error that indicates a problem loading the document.",
    "title" : "LoadError"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/SyncState\/init()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "init()"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Prop\/key(value:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "Prop.key(value:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeObjId\/read(from:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.read(from:). ",
    "summary" : "Inherited from FfiConverter.read(from:).",
    "title" : "read(from:)"
  },
  {
    "headings" : [
      "Overview"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PathElement"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A component of the path to an object within a document.  Overview A path constructed of PathElement instances represents the sequence of navigating through a hierarchical structure of objects within an Automerge document. The base of this tree structure is  ROOT.",
    "summary" : "A component of the path to an object within a document.",
    "title" : "PathElement"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ScalarValue\/timestamp(value:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "ScalarValue.timestamp(value:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Text\/init(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Creates a new Text instance with the string value you provide.  The value for the text.",
    "summary" : "Creates a new Text instance with the string value you provide.",
    "title" : "init(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/PatchAction\/spliceText(obj:index:value:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "PatchAction.spliceText(obj:index:value:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Value\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CodingKeyLookupError\/PathExtendsThroughScalar(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The path provided extends through an Automerge ScalarValue, a leaf node in the schema. ",
    "summary" : "The path provided extends through an Automerge ScalarValue, a leaf node in the schema.",
    "title" : "CodingKeyLookupError.PathExtendsThroughScalar(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/lengthAt(obj:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The length of the list obj as at heads ",
    "summary" : "The length of the list obj as at heads",
    "title" : "lengthAt(obj:heads:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ScalarValue\/null"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "ScalarValue.null"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/delete(obj:index:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Delete the value at index from obj ",
    "summary" : "Delete the value at index from obj",
    "title" : "delete(obj:index:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/PathElement\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/UIntScalarConversionError\/notUIntScalarValue(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "UIntScalarConversionError.notUIntScalarValue(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/PathElement"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "PathElement"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CodingKeyLookupError\/InvalidValueLookup(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The path provided to look up a value is invalid. ",
    "summary" : "The path provided to look up a value is invalid.",
    "title" : "CodingKeyLookupError.InvalidValueLookup(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeDoc"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeDoc"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocError\/WrongObjectType(message:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "DocError.WrongObjectType(message:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CodingKeyLookupError"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Automerge Encoding errors ",
    "summary" : "Automerge Encoding errors",
    "title" : "CodingKeyLookupError"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Prop\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypePathElement_lower(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypePathElement_lower(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Patch\/Hashable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Hashable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ObjType\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypePatch"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypePatch"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Patch"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "Patch"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/getAtInList(obj:index:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "getAtInList(obj:index:heads:)"
  },
  {
    "headings" : [
      "Overview"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/DecodeSyncStateError"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An error that indicates the synchronisation state could not be decoded.  Overview The error is specific to the Rust language binding infrastructure.",
    "summary" : "An error that indicates the synchronisation state could not be decoded.",
    "title" : "DecodeSyncStateError"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CodingKeyLookupError\/LocalizedError-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "LocalizedError Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/LoadError\/Error-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Error Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Text\/value"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "value"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PathParseError\/Error-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Error Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/getAllInMap(obj:key:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.getAllInMap(obj:key:). ",
    "summary" : "Inherited from DocProtocol.getAllInMap(obj:key:).",
    "title" : "getAllInMap(obj:key:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeDocError\/write(_:into:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.write(_:into:). ",
    "summary" : "Inherited from FfiConverter.write(_:into:).",
    "title" : "write(_:into:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/putObjectInMap(obj:key:objType:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "putObjectInMap(obj:key:objType:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/applyEncodedChanges(changes:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "applyEncodedChanges(changes:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/StringScalarConversionError\/localizedDescription"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from Error.localizedDescription. ",
    "summary" : "Inherited from Error.localizedDescription.",
    "title" : "localizedDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Prop\/Key(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A property in a map. ",
    "summary" : "A property in a map.",
    "title" : "Prop.Key(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/BooleanScalarConversionError\/LocalizedError-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "LocalizedError Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/UIntScalarConversionError\/helpAnchor"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from LocalizedError.helpAnchor. ",
    "summary" : "Inherited from LocalizedError.helpAnchor.",
    "title" : "helpAnchor"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/DeleteSeq\/init(obj:index:length:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "init(obj:index:length:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeChangeHash"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeChangeHash"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/SyncState\/theirHeads()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from SyncStateProtocol.theirHeads(). ",
    "summary" : "Inherited from SyncStateProtocol.theirHeads().",
    "title" : "theirHeads()"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/putInList(obj:index:value:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "putInList(obj:index:value:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ChangeHash\/debugDescription"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The hex value of the change hash. ",
    "summary" : "The hex value of the change hash.",
    "title" : "debugDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/BytesScalarConversionError\/notbytesValue(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "BytesScalarConversionError.notbytesValue(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DecodeSyncStateError\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/BooleanScalarConversionError\/recoverySuggestion"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from LocalizedError.recoverySuggestion. ",
    "summary" : "Inherited from LocalizedError.recoverySuggestion.",
    "title" : "recoverySuggestion"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/DeleteSeq\/length"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The number of elements to delete. ",
    "summary" : "The number of elements to delete.",
    "title" : "length"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/deleteInList(obj:index:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "deleteInList(obj:index:)"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey\/init(stringValue:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Creates a new schema path element for a keyed container using the string you provide.  The key for a keyed container. Discussion For a non-failable initializer for AnyCodingKey, use init(_:).",
    "summary" : "Creates a new schema path element for a keyed container using the string you provide.",
    "title" : "init(stringValue:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Counter\/ConvertError"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "The error type associated with failed attempted conversion into or out of Automerge representation. ",
    "summary" : "The error type associated with failed attempted conversion into or out of Automerge representation.",
    "title" : "Counter.ConvertError"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CounterScalarConversionError\/LocalizedError-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "LocalizedError Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/merge(other:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "merge(other:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CounterScalarConversionError\/errorDescription"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A localized message describing what error occurred. ",
    "summary" : "A localized message describing what error occurred.",
    "title" : "errorDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/PatchAction\/increment(obj:prop:value:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "PatchAction.increment(obj:prop:value:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/path(obj:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.path(obj:). ",
    "summary" : "Inherited from DocProtocol.path(obj:).",
    "title" : "path(obj:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PatchAction\/Increment(_:_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Increment the property of the identified object, typically a Counter. ",
    "summary" : "Increment the property of the identified object, typically a Counter.",
    "title" : "PatchAction.Increment(_:_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/text(obj:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "text(obj:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeProp_lower(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeProp_lower(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/DecodeSyncStateError\/Error-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Error Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PatchAction\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeDoc\/write(_:into:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.write(_:into:). ",
    "summary" : "Inherited from FfiConverter.write(_:into:).",
    "title" : "write(_:into:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeSyncState\/lift(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.lift(_:). ",
    "summary" : "Inherited from FfiConverter.lift(_:).",
    "title" : "lift(_:)"
  },
  {
    "headings" : [
      "Overview"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Patch"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A collection of updates applied to an Automerge document.  Overview A patch can be received from applying updates to an Automerge document with one of the following methods: applyEncodedChangesWithPatches(encoded:) receiveSyncMessageWithPatches(state:message:) mergeWithPatches(other:). You can inspect these patches to identify the objects updated within the Automerge document, in order to react accordingly within your code. A common use case for inspecting patches is to recalculate derived data that is using Automerge as an authoritative source.",
    "summary" : "A collection of updates applied to an Automerge document.",
    "title" : "Patch"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "AutomergeUniffi"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/splice(obj:start:delete:values:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Splice into the list obj  The list to insert into the index to begin inserting at the number of elements to delete the values to insert",
    "summary" : "Splice into the list obj",
    "title" : "splice(obj:start:delete:values:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/keys(obj:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Get all the keys in the map obj ",
    "summary" : "Get all the keys in the map obj",
    "title" : "keys(obj:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/TimestampScalarConversionError"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A failure to convert an Automerge scalar value to or from a timestamp representation. ",
    "summary" : "A failure to convert an Automerge scalar value to or from a timestamp representation.",
    "title" : "TimestampScalarConversionError"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeReceiveSyncError\/read(from:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.read(from:). ",
    "summary" : "Inherited from FfiConverter.read(from:).",
    "title" : "read(from:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/PatchAction\/put(obj:prop:value:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "PatchAction.put(obj:prop:value:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/generateSyncMessage(state:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.generateSyncMessage(state:). ",
    "summary" : "Inherited from DocProtocol.generateSyncMessage(state:).",
    "title" : "generateSyncMessage(state:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/PathElement\/prop"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "prop"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Text\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ScalarValue\/boolean(value:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "ScalarValue.boolean(value:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/BytesScalarConversionError\/errorDescription"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A localized message describing what error occurred. ",
    "summary" : "A localized message describing what error occurred.",
    "title" : "errorDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ObjType\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeLoadError\/read(from:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.read(from:). ",
    "summary" : "Inherited from FfiConverter.read(from:).",
    "title" : "read(from:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/BooleanScalarConversionError\/helpAnchor"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from LocalizedError.helpAnchor. ",
    "summary" : "Inherited from LocalizedError.helpAnchor.",
    "title" : "helpAnchor"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/LoadError\/Internal(message:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "LoadError.Internal(message:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/getAll(obj:key:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Get all the possibly conflicting values at key in the map obj ",
    "summary" : "Get all the possibly conflicting values at key in the map obj",
    "title" : "getAll(obj:key:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CounterScalarConversionError\/localizedDescription"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from Error.localizedDescription. ",
    "summary" : "Inherited from Error.localizedDescription.",
    "title" : "localizedDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/SyncStateProtocol\/theirHeads()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "theirHeads()"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/BooleanScalarConversionError\/Error-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Error Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/deleteInMap(obj:key:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.deleteInMap(obj:key:). ",
    "summary" : "Inherited from DocProtocol.deleteInMap(obj:key:).",
    "title" : "deleteInMap(obj:key:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/incrementInMap(obj:key:by:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.incrementInMap(obj:key:by:). ",
    "summary" : "Inherited from DocProtocol.incrementInMap(obj:key:by:).",
    "title" : "incrementInMap(obj:key:by:)"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/get(obj:key:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Get the value at key from the map obj  Discussion Note that if there are multiple conflicting values this method will return one of them  arbitrarily (but deterministically). If you need all the conflicting values see getAll(obj:key:)",
    "summary" : "Get the value at key from the map obj",
    "title" : "get(obj:key:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey\/CodingKey-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "CodingKey Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PathElement\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Patch\/!=(_:_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Equatable.!=(_:_:). ",
    "summary" : "Inherited from Equatable.!=(_:_:).",
    "title" : "!=(_:_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/applyEncodedChangesWithPatches(changes:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "applyEncodedChangesWithPatches(changes:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DecodeSyncStateError\/Error-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Error Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypePatch_lift(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypePatch_lift(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeObjType_lower(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeObjType_lower(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/putObjectInList(obj:index:objType:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.putObjectInList(obj:index:objType:). ",
    "summary" : "Inherited from DocProtocol.putObjectInList(obj:index:objType:).",
    "title" : "putObjectInList(obj:index:objType:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/splice(obj:start:delete:values:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "splice(obj:start:delete:values:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeActorId"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeActorId"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/SyncStateProtocol\/reset()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "reset()"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/mapKeys(obj:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.mapKeys(obj:). ",
    "summary" : "Inherited from DocProtocol.mapKeys(obj:).",
    "title" : "mapKeys(obj:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ScalarValue\/description"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from CustomStringConvertible.description. ",
    "summary" : "Inherited from CustomStringConvertible.description.",
    "title" : "description"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/CounterScalarConversionError\/recoverySuggestion"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from LocalizedError.recoverySuggestion. ",
    "summary" : "Inherited from LocalizedError.recoverySuggestion.",
    "title" : "recoverySuggestion"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ObjType"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "A type that represents an Automerge object. ",
    "summary" : "A type that represents an Automerge object.",
    "title" : "ObjType"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/StringScalarConversionError\/Error-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Error Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/PathParseError\/localizedDescription"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from Error.localizedDescription. ",
    "summary" : "Inherited from Error.localizedDescription.",
    "title" : "localizedDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeProp\/write(_:into:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.write(_:into:). ",
    "summary" : "Inherited from FfiConverter.write(_:into:).",
    "title" : "write(_:into:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/SyncState\/reset()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from SyncStateProtocol.reset(). ",
    "summary" : "Inherited from SyncStateProtocol.reset().",
    "title" : "reset()"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/ScalarValue\/unknown(typeCode:data:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "ScalarValue.unknown(typeCode:data:)"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/SyncState\/encode()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Serialize this sync state  Discussion The serialized representation does not include session data which depends on reliable in-order delivery. I.e. you do not need to call reset() on a decoded sync state.",
    "summary" : "Serialize this sync state",
    "title" : "encode()"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/LoadError\/Error-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Error Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/getInList(obj:index:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "getInList(obj:index:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/SyncStateProtocol"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "SyncStateProtocol"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeProp"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "FfiConverterTypeProp"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeChangeHash\/write(_:into:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.write(_:into:). ",
    "summary" : "Inherited from FfiConverter.write(_:into:).",
    "title" : "write(_:into:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/objectType(obj:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "objectType(obj:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Doc\/getAllInList(obj:index:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from DocProtocol.getAllInList(obj:index:). ",
    "summary" : "Inherited from DocProtocol.getAllInList(obj:index:).",
    "title" : "getAllInList(obj:index:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/mergeWithPatches(other:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "mergeWithPatches(other:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/IntScalarConversionError\/localizedDescription"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from Error.localizedDescription. ",
    "summary" : "Inherited from Error.localizedDescription.",
    "title" : "localizedDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/Patch\/hash(into:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Hashable.hash(into:). ",
    "summary" : "Inherited from Hashable.hash(into:).",
    "title" : "hash(into:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/Document\/getAll(obj:index:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Get all the possibly conflicting values at index in the list obj ",
    "summary" : "Get all the possibly conflicting values at index in the list obj",
    "title" : "getAll(obj:index:)"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ChangeHash\/Equatable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Equatable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/DocError\/localizedDescription"
      },
      "type" : "topLevelPage"
    },
    "platforms" : [
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "8.0",
        "name" : "iOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "10.10",
        "name" : "macOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "9.0",
        "name" : "tvOS",
        "unavailable" : false
      },
      {
        "beta" : false,
        "deprecated" : false,
        "introducedAt" : "2.0",
        "name" : "watchOS",
        "unavailable" : false
      }
    ],
    "rawIndexableTextContent" : "Inherited from Error.localizedDescription. ",
    "summary" : "Inherited from Error.localizedDescription.",
    "title" : "localizedDescription"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/IntScalarConversionError\/Error-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Error Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/ScalarValue\/Uint(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "An unsigned integer. ",
    "summary" : "An unsigned integer.",
    "title" : "ScalarValue.Uint(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/PathElement\/hash(into:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from Hashable.hash(into:). ",
    "summary" : "Inherited from Hashable.hash(into:).",
    "title" : "hash(into:)"
  },
  {
    "headings" : [
      "Discussion"
    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/Automerge\/AnyCodingKey\/init(intValue:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Creates a new schema path element for an un-keyed container using the index you provide.  The index position for an un-keyed container. Discussion For a non-failable initializer for AnyCodingKey, use init(_:).",
    "summary" : "Creates a new schema path element for an un-keyed container using the index you provide.",
    "title" : "init(intValue:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeProp\/read(from:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.read(from:). ",
    "summary" : "Inherited from FfiConverter.read(from:).",
    "title" : "read(from:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/SyncStateProtocol\/encode()"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "encode()"
  },
  {
    "headings" : [

    ],
    "kind" : "article",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/KeyValue\/Hashable-Implementations"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "",
    "summary" : "",
    "title" : "Hashable Implementations"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/FfiConverterTypeSyncState\/lower(_:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : "Inherited from FfiConverter.lower(_:). ",
    "summary" : "Inherited from FfiConverter.lower(_:).",
    "title" : "lower(_:)"
  },
  {
    "headings" : [

    ],
    "kind" : "symbol",
    "location" : {
      "reference" : {
        "interfaceLanguage" : "swift",
        "url" : "doc:\/\/com.github.automerge.automerge-swift\/documentation\/AutomergeUniffi\/DocProtocol\/getAllAtInMap(obj:key:heads:)"
      },
      "type" : "topLevelPage"
    },
    "rawIndexableTextContent" : " ",
    "summary" : "",
    "title" : "getAllAtInMap(obj:key:heads:)"
  }
]